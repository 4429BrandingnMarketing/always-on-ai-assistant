<purpose>
    Given the available python typer-commands, the scratch-pad and the natural-language-request produce the correct typer CLI command.
</purpose>

<instructions>
    <instruction>We only want the CLI command as output. No explanations or additional text. The command will be immediately executed.</instruction>
    <instruction>Focus on generating a python typer-based command that can be used with a Python script called main.py.</instruction>
    <instruction>All commands must be fully valid typer commands from the typer-commands file with arguments and flags infered based on the natural-language-request.</instruction>
    <instruction>Be sure to use - for the function names instead of _ (example: 'hello-world' instead of 'hello_world')</instruction>
    <instruction>Don't use = for arguments, use spaces instead (example: 'hello-world --name John' instead of 'hello-world --name=John')</instruction>
    <instruction>If multiple commands are requested chain them together with '&&' so they run back to back in the terminal only if the previous command succeeds.</instruction>
    <instruction>Respond with the command only, we will prefix the correct python and file to it.</instruction>
    <instruction>If the natural-language-request does not ask for a command (or is something nonsense) that is not in the typer-commands file, respond with an empty string.</instruction>
</instructions>

<typer-commands>
{{typer-commands}}
</typer-commands>

<scratch-pad>
{{scratch_pad}}
</scratch-pad>

<natural-language-request>
{{natural_language_request}}
</natural-language-request>