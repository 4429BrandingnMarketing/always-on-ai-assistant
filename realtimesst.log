2025-01-09 16:38:43.087 - RealTimeSTT: root - INFO - Starting RealTimeSTT
2025-01-09 16:38:43.093 - RealTimeSTT: root - INFO - Initializing audio recording (creating pyAudio input stream, sample rate: 16000 buffer size: 512
2025-01-09 16:38:43.096 - RealTimeSTT: root - INFO - Initializing WebRTC voice with Sensitivity 3
2025-01-09 16:38:43.097 - RealTimeSTT: root - DEBUG - WebRTC VAD voice activity detection engine initialized successfully
2025-01-09 16:38:44.977 - RealTimeSTT: torio._extension.utils - DEBUG - Loading FFmpeg6
2025-01-09 16:38:45.098 - RealTimeSTT: torio._extension.utils - DEBUG - Failed to load FFmpeg6 extension.
Traceback (most recent call last):
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torch/_ops.py", line 1350, in load_library
    ctypes.CDLL(path)
  File "/Users/ravix/.local/share/uv/python/cpython-3.12.5-macos-aarch64-none/lib/python3.12/ctypes/__init__.py", line 379, in __init__
    self._handle = _dlopen(self._name, mode)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^
OSError: dlopen(/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/lib/libtorio_ffmpeg6.so, 0x0006): Library not loaded: @rpath/libavutil.58.dylib
  Referenced from: <2CE67C06-BDEB-3F80-96E3-4F103BB9AEEC> /Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/lib/libtorio_ffmpeg6.so
  Reason: no LC_RPATH's found
2025-01-09 16:38:45.101 - RealTimeSTT: torio._extension.utils - DEBUG - Loading FFmpeg5
2025-01-09 16:38:45.221 - RealTimeSTT: torio._extension.utils - DEBUG - Failed to load FFmpeg5 extension.
Traceback (most recent call last):
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torch/_ops.py", line 1350, in load_library
    ctypes.CDLL(path)
  File "/Users/ravix/.local/share/uv/python/cpython-3.12.5-macos-aarch64-none/lib/python3.12/ctypes/__init__.py", line 379, in __init__
    self._handle = _dlopen(self._name, mode)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^
OSError: dlopen(/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/lib/libtorio_ffmpeg5.so, 0x0006): Library not loaded: @rpath/libavutil.57.dylib
  Referenced from: <18EE5C42-210E-3E8B-81B0-37AB03553D41> /Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/lib/libtorio_ffmpeg5.so
  Reason: no LC_RPATH's found
2025-01-09 16:38:45.222 - RealTimeSTT: torio._extension.utils - DEBUG - Loading FFmpeg4
2025-01-09 16:38:45.343 - RealTimeSTT: torio._extension.utils - DEBUG - Failed to load FFmpeg4 extension.
Traceback (most recent call last):
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torch/_ops.py", line 1350, in load_library
    ctypes.CDLL(path)
  File "/Users/ravix/.local/share/uv/python/cpython-3.12.5-macos-aarch64-none/lib/python3.12/ctypes/__init__.py", line 379, in __init__
    self._handle = _dlopen(self._name, mode)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^
OSError: dlopen(/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/lib/libtorio_ffmpeg4.so, 0x0006): Library not loaded: @rpath/libavutil.56.dylib
  Referenced from: <991D7190-DAB8-3DA1-A934-0A5FF14C3C78> /Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/lib/libtorio_ffmpeg4.so
  Reason: no LC_RPATH's found
2025-01-09 16:38:45.344 - RealTimeSTT: torio._extension.utils - DEBUG - Loading FFmpeg
2025-01-09 16:38:45.345 - RealTimeSTT: torio._extension.utils - DEBUG - Failed to load FFmpeg extension.
Traceback (most recent call last):
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/_extension/utils.py", line 106, in _find_versionsed_ffmpeg_extension
    raise RuntimeError(f"FFmpeg{version} extension is not available.")
RuntimeError: FFmpeg extension is not available.
2025-01-09 16:38:45.640 - RealTimeSTT: root - DEBUG - Silero VAD voice activity detection engine initialized successfully
2025-01-09 16:38:45.641 - RealTimeSTT: root - DEBUG - Starting realtime worker
2025-01-09 16:38:45.641 - RealTimeSTT: root - DEBUG - Waiting for main transcription model to start
2025-01-09 16:38:46.872 - RealTimeSTT: root - DEBUG - Main transcription model ready
2025-01-09 16:38:46.872 - RealTimeSTT: root - DEBUG - RealtimeSTT initialization completed successfully
2025-01-09 16:38:46.872 - RealTimeSTT: root - INFO - Setting listen time
2025-01-09 16:38:46.872 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'listening'
2025-01-09 16:38:46.872 - RealTimeSTT: root - DEBUG - Waiting for recording start
2025-01-09 16:38:52.255 - RealTimeSTT: root - INFO - voice activity detected
2025-01-09 16:38:52.256 - RealTimeSTT: root - INFO - recording started
2025-01-09 16:38:52.256 - RealTimeSTT: root - INFO - State changed from 'listening' to 'recording'
2025-01-09 16:38:52.256 - RealTimeSTT: root - DEBUG - Waiting for recording stop
2025-01-09 16:38:53.407 - RealTimeSTT: root - INFO - recording stopped
2025-01-09 16:38:53.408 - RealTimeSTT: root - INFO - State changed from 'recording' to 'inactive'
2025-01-09 16:38:53.496 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'transcribing'
2025-01-09 16:38:53.498 - RealTimeSTT: root - DEBUG - Adding transcription request, no early transcription started
2025-01-09 16:38:53.499 - RealTimeSTT: root - DEBUG - Receive from parent_transcription_pipe after sendiung transcription request, transcribe_count: 1
2025-01-09 16:38:53.537 - RealTimeSTT: root - INFO - State changed from 'transcribing' to 'inactive'
2025-01-09 16:38:53.891 - RealTimeSTT: root - DEBUG - Model tiny completed transcription in 0.39 seconds
2025-01-09 16:38:53.891 - RealTimeSTT: root - INFO - Setting listen time
2025-01-09 16:38:53.892 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'listening'
2025-01-09 16:38:53.892 - RealTimeSTT: root - DEBUG - Waiting for recording start
2025-01-09 16:38:57.502 - RealTimeSTT: root - INFO - voice activity detected
2025-01-09 16:38:57.503 - RealTimeSTT: root - INFO - recording started
2025-01-09 16:38:57.503 - RealTimeSTT: root - INFO - State changed from 'listening' to 'recording'
2025-01-09 16:38:57.503 - RealTimeSTT: root - DEBUG - Waiting for recording stop
2025-01-09 16:39:00.638 - RealTimeSTT: root - INFO - recording stopped
2025-01-09 16:39:00.642 - RealTimeSTT: root - INFO - State changed from 'recording' to 'inactive'
2025-01-09 16:39:00.707 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'transcribing'
2025-01-09 16:39:00.709 - RealTimeSTT: root - DEBUG - Adding transcription request, no early transcription started
2025-01-09 16:39:00.723 - RealTimeSTT: root - DEBUG - Receive from parent_transcription_pipe after sendiung transcription request, transcribe_count: 1
2025-01-09 16:39:00.769 - RealTimeSTT: root - INFO - State changed from 'transcribing' to 'inactive'
2025-01-09 16:39:01.191 - RealTimeSTT: root - DEBUG - Model tiny completed transcription in 0.48 seconds
2025-01-09 16:39:01.191 - RealTimeSTT: root - INFO - Setting listen time
2025-01-09 16:39:01.191 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'listening'
2025-01-09 16:39:01.191 - RealTimeSTT: root - DEBUG - Waiting for recording start
2025-01-09 16:39:02.942 - RealTimeSTT: root - INFO - voice activity detected
2025-01-09 16:39:02.942 - RealTimeSTT: root - INFO - recording started
2025-01-09 16:39:02.942 - RealTimeSTT: root - INFO - State changed from 'listening' to 'recording'
2025-01-09 16:39:02.942 - RealTimeSTT: root - DEBUG - Waiting for recording stop
2025-01-09 16:39:04.927 - RealTimeSTT: root - INFO - recording stopped
2025-01-09 16:39:04.928 - RealTimeSTT: root - INFO - State changed from 'recording' to 'inactive'
2025-01-09 16:39:04.947 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'transcribing'
2025-01-09 16:39:04.949 - RealTimeSTT: root - DEBUG - Adding transcription request, no early transcription started
2025-01-09 16:39:04.955 - RealTimeSTT: root - DEBUG - Receive from parent_transcription_pipe after sendiung transcription request, transcribe_count: 1
2025-01-09 16:39:04.993 - RealTimeSTT: root - INFO - State changed from 'transcribing' to 'inactive'
2025-01-09 16:39:05.381 - RealTimeSTT: root - DEBUG - Model tiny completed transcription in 0.43 seconds
2025-01-09 16:39:05.382 - RealTimeSTT: root - INFO - Setting listen time
2025-01-09 16:39:05.382 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'listening'
2025-01-09 16:39:05.382 - RealTimeSTT: root - DEBUG - Waiting for recording start
2025-01-09 16:39:07.295 - RealTimeSTT: root - INFO - voice activity detected
2025-01-09 16:39:07.295 - RealTimeSTT: root - INFO - recording started
2025-01-09 16:39:07.296 - RealTimeSTT: root - INFO - State changed from 'listening' to 'recording'
2025-01-09 16:39:07.296 - RealTimeSTT: root - DEBUG - Waiting for recording stop
2025-01-09 16:39:08.832 - RealTimeSTT: root - INFO - recording stopped
2025-01-09 16:39:08.833 - RealTimeSTT: root - INFO - State changed from 'recording' to 'inactive'
2025-01-09 16:39:08.850 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'transcribing'
2025-01-09 16:39:08.851 - RealTimeSTT: root - DEBUG - Adding transcription request, no early transcription started
2025-01-09 16:39:08.870 - RealTimeSTT: root - DEBUG - Receive from parent_transcription_pipe after sendiung transcription request, transcribe_count: 1
2025-01-09 16:39:08.894 - RealTimeSTT: root - INFO - State changed from 'transcribing' to 'inactive'
2025-01-09 16:39:09.274 - RealTimeSTT: root - DEBUG - Model tiny completed transcription in 0.42 seconds
2025-01-09 16:39:09.274 - RealTimeSTT: root - INFO - Setting listen time
2025-01-09 16:39:09.274 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'listening'
2025-01-09 16:39:09.275 - RealTimeSTT: root - DEBUG - Waiting for recording start
2025-01-09 16:39:10.557 - RealTimeSTT: root - INFO - voice activity detected
2025-01-09 16:39:10.557 - RealTimeSTT: root - INFO - recording started
2025-01-09 16:39:10.558 - RealTimeSTT: root - INFO - State changed from 'listening' to 'recording'
2025-01-09 16:39:10.558 - RealTimeSTT: root - DEBUG - Waiting for recording stop
2025-01-09 16:39:11.842 - RealTimeSTT: root - INFO - recording stopped
2025-01-09 16:39:11.843 - RealTimeSTT: root - INFO - State changed from 'recording' to 'inactive'
2025-01-09 16:39:11.864 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'transcribing'
2025-01-09 16:39:11.865 - RealTimeSTT: root - DEBUG - Adding transcription request, no early transcription started
2025-01-09 16:39:11.866 - RealTimeSTT: root - DEBUG - Receive from parent_transcription_pipe after sendiung transcription request, transcribe_count: 1
2025-01-09 16:39:11.909 - RealTimeSTT: root - INFO - State changed from 'transcribing' to 'inactive'
2025-01-09 16:39:12.266 - RealTimeSTT: root - DEBUG - Model tiny completed transcription in 0.40 seconds
2025-01-09 16:39:12.267 - RealTimeSTT: root - INFO - Setting listen time
2025-01-09 16:39:12.267 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'listening'
2025-01-09 16:39:12.267 - RealTimeSTT: root - DEBUG - Waiting for recording start
2025-01-09 16:39:15.491 - RealTimeSTT: root - INFO - voice activity detected
2025-01-09 16:39:15.491 - RealTimeSTT: root - INFO - recording started
2025-01-09 16:39:15.491 - RealTimeSTT: root - INFO - State changed from 'listening' to 'recording'
2025-01-09 16:39:15.491 - RealTimeSTT: root - DEBUG - Waiting for recording stop
2025-01-09 16:39:21.055 - RealTimeSTT: root - INFO - recording stopped
2025-01-09 16:39:21.056 - RealTimeSTT: root - INFO - State changed from 'recording' to 'inactive'
2025-01-09 16:39:21.155 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'transcribing'
2025-01-09 16:39:21.157 - RealTimeSTT: root - DEBUG - Adding transcription request, no early transcription started
2025-01-09 16:39:21.175 - RealTimeSTT: root - DEBUG - Receive from parent_transcription_pipe after sendiung transcription request, transcribe_count: 1
2025-01-09 16:39:21.183 - RealTimeSTT: root - INFO - State changed from 'transcribing' to 'inactive'
2025-01-09 16:39:21.709 - RealTimeSTT: root - DEBUG - Model tiny completed transcription in 0.55 seconds
2025-01-09 16:39:21.710 - RealTimeSTT: root - INFO - Setting listen time
2025-01-09 16:39:21.710 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'listening'
2025-01-09 16:39:21.710 - RealTimeSTT: root - DEBUG - Waiting for recording start
2025-01-09 16:39:23.914 - RealTimeSTT: root - DEBUG - Receive from stdout pipe
2025-01-09 16:39:23.914 - RealTimeSTT: root - INFO - KeyboardInterrupt in wait_audio, shutting down
2025-01-09 16:39:23.914 - RealTimeSTT: root - DEBUG - Finishing recording thread
2025-01-09 16:39:23.925 - RealTimeSTT: root - DEBUG - Terminating reader process
2025-01-09 16:39:24.219 - RealTimeSTT: root - DEBUG - Terminating transcription process
2025-01-09 16:39:24.219 - RealTimeSTT: root - DEBUG - Finishing realtime thread
2025-01-09 16:39:24.247 - RealTimeSTT: root - INFO - KeyboardInterrupt in text() method
2025-01-09 16:55:44.082 - RealTimeSTT: root - INFO - Starting RealTimeSTT
2025-01-09 16:55:44.087 - RealTimeSTT: root - INFO - Initializing audio recording (creating pyAudio input stream, sample rate: 16000 buffer size: 512
2025-01-09 16:55:44.089 - RealTimeSTT: root - INFO - Initializing WebRTC voice with Sensitivity 3
2025-01-09 16:55:44.089 - RealTimeSTT: root - DEBUG - WebRTC VAD voice activity detection engine initialized successfully
2025-01-09 16:55:44.390 - RealTimeSTT: torio._extension.utils - DEBUG - Loading FFmpeg6
2025-01-09 16:55:44.402 - RealTimeSTT: torio._extension.utils - DEBUG - Failed to load FFmpeg6 extension.
Traceback (most recent call last):
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torch/_ops.py", line 1350, in load_library
    ctypes.CDLL(path)
  File "/Users/ravix/.local/share/uv/python/cpython-3.12.5-macos-aarch64-none/lib/python3.12/ctypes/__init__.py", line 379, in __init__
    self._handle = _dlopen(self._name, mode)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^
OSError: dlopen(/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/lib/libtorio_ffmpeg6.so, 0x0006): Library not loaded: @rpath/libavutil.58.dylib
  Referenced from: <2CE67C06-BDEB-3F80-96E3-4F103BB9AEEC> /Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/lib/libtorio_ffmpeg6.so
  Reason: no LC_RPATH's found
2025-01-09 16:55:44.403 - RealTimeSTT: torio._extension.utils - DEBUG - Loading FFmpeg5
2025-01-09 16:55:44.409 - RealTimeSTT: torio._extension.utils - DEBUG - Failed to load FFmpeg5 extension.
Traceback (most recent call last):
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torch/_ops.py", line 1350, in load_library
    ctypes.CDLL(path)
  File "/Users/ravix/.local/share/uv/python/cpython-3.12.5-macos-aarch64-none/lib/python3.12/ctypes/__init__.py", line 379, in __init__
    self._handle = _dlopen(self._name, mode)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^
OSError: dlopen(/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/lib/libtorio_ffmpeg5.so, 0x0006): Library not loaded: @rpath/libavutil.57.dylib
  Referenced from: <18EE5C42-210E-3E8B-81B0-37AB03553D41> /Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/lib/libtorio_ffmpeg5.so
  Reason: no LC_RPATH's found
2025-01-09 16:55:44.409 - RealTimeSTT: torio._extension.utils - DEBUG - Loading FFmpeg4
2025-01-09 16:55:44.410 - RealTimeSTT: torio._extension.utils - DEBUG - Failed to load FFmpeg4 extension.
Traceback (most recent call last):
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torch/_ops.py", line 1350, in load_library
    ctypes.CDLL(path)
  File "/Users/ravix/.local/share/uv/python/cpython-3.12.5-macos-aarch64-none/lib/python3.12/ctypes/__init__.py", line 379, in __init__
    self._handle = _dlopen(self._name, mode)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^
OSError: dlopen(/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/lib/libtorio_ffmpeg4.so, 0x0006): Library not loaded: @rpath/libavutil.56.dylib
  Referenced from: <991D7190-DAB8-3DA1-A934-0A5FF14C3C78> /Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/lib/libtorio_ffmpeg4.so
  Reason: no LC_RPATH's found
2025-01-09 16:55:44.410 - RealTimeSTT: torio._extension.utils - DEBUG - Loading FFmpeg
2025-01-09 16:55:44.410 - RealTimeSTT: torio._extension.utils - DEBUG - Failed to load FFmpeg extension.
Traceback (most recent call last):
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ravix/Documents/projects/experimental/deepseek-ai-assistant/.venv/lib/python3.12/site-packages/torio/_extension/utils.py", line 106, in _find_versionsed_ffmpeg_extension
    raise RuntimeError(f"FFmpeg{version} extension is not available.")
RuntimeError: FFmpeg extension is not available.
2025-01-09 16:55:44.539 - RealTimeSTT: root - DEBUG - Silero VAD voice activity detection engine initialized successfully
2025-01-09 16:55:44.542 - RealTimeSTT: root - DEBUG - Starting realtime worker
2025-01-09 16:55:44.543 - RealTimeSTT: root - DEBUG - Waiting for main transcription model to start
2025-01-09 16:55:45.792 - RealTimeSTT: root - DEBUG - Main transcription model ready
2025-01-09 16:55:45.792 - RealTimeSTT: root - DEBUG - RealtimeSTT initialization completed successfully
2025-01-09 16:55:45.792 - RealTimeSTT: root - INFO - Setting listen time
2025-01-09 16:55:45.793 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'listening'
2025-01-09 16:55:45.793 - RealTimeSTT: root - DEBUG - Waiting for recording start
2025-01-09 16:55:49.170 - RealTimeSTT: root - INFO - voice activity detected
2025-01-09 16:55:49.171 - RealTimeSTT: root - INFO - recording started
2025-01-09 16:55:49.171 - RealTimeSTT: root - INFO - State changed from 'listening' to 'recording'
2025-01-09 16:55:49.171 - RealTimeSTT: root - DEBUG - Waiting for recording stop
2025-01-09 16:55:50.321 - RealTimeSTT: root - INFO - recording stopped
2025-01-09 16:55:50.322 - RealTimeSTT: root - INFO - State changed from 'recording' to 'inactive'
2025-01-09 16:55:50.415 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'transcribing'
2025-01-09 16:55:50.417 - RealTimeSTT: root - DEBUG - Adding transcription request, no early transcription started
2025-01-09 16:55:50.418 - RealTimeSTT: root - DEBUG - Receive from parent_transcription_pipe after sendiung transcription request, transcribe_count: 1
2025-01-09 16:55:50.449 - RealTimeSTT: root - INFO - State changed from 'transcribing' to 'inactive'
2025-01-09 16:55:50.800 - RealTimeSTT: root - DEBUG - Model tiny completed transcription in 0.38 seconds
2025-01-09 16:55:50.800 - RealTimeSTT: root - INFO - Setting listen time
2025-01-09 16:55:50.800 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'listening'
2025-01-09 16:55:50.800 - RealTimeSTT: main - INFO - 📂 Loading typer file...
2025-01-09 16:55:50.800 - RealTimeSTT: root - DEBUG - Waiting for recording start
2025-01-09 16:55:50.800 - RealTimeSTT: main - INFO - 📝 Loading scratchpad files...
2025-01-09 16:55:50.801 - RealTimeSTT: main - INFO - 📝 Loading prompt template...
2025-01-09 16:55:50.801 - RealTimeSTT: main - INFO - 🤖 Processing text with DeepSeek...
2025-01-09 16:55:50.803 - RealTimeSTT: openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '<purpose>\n    Given the available python typer-commands, the scratch-pad and the natural-language-request produce the correct typer CLI command.\n</purpose>\n\n<instructions>\n    <instruction>We only want the CLI command as output. No explanations or additional text. The command will be immediately executed.</instruction>\n    <instruction>Focus on generating a python typer-based command that can be used with a Python script called main.py.</instruction>\n    <instruction>All commands must be fully valid typer commands from the typer-commands file with arguments and flags infered based on the natural-language-request.</instruction>\n    <instruction>Be sure to use - for the function names instead of _ (example: \'hello-world\' instead of \'hello_world\')</instruction>\n    <instruction>Don\'t use = for arguments, use spaces instead (example: \'hello-world --name John\' instead of \'hello-world --name=John\')</instruction>\n    <instruction>If multiple commands are requested chain them together with \'&&\' so they run back to back in the terminal only if the previous command succeeds.</instruction>\n    <instruction>Respond with the command only, we will prefix the correct python and file to it.</instruction>\n    <instruction>If the user asks for a command (or something nonsense) that is not in the typer-commands file, respond with an empty string.</instruction>\n</instructions>\n\n<typer-commands>\nimport typer\nfrom typing import Optional\n\napp = typer.Typer()\n\n\n@app.command()\ndef ping_server(\n    wait: bool = typer.Option(False, "--wait", help="Wait for server response?")\n):\n    """\n    Pings the server, optionally waiting for a response.\n    """\n    pass\n\n\n@app.command()\ndef show_config(\n    verbose: bool = typer.Option(False, "--verbose", help="Show config in detail?")\n):\n    """\n    Shows the current configuration.\n    """\n    pass\n\n\n@app.command()\ndef list_files(\n    path: str = typer.Argument(..., help="Path to list files from"),\n    all_files: bool = typer.Option(False, "--all", help="Include hidden files"),\n):\n    """\n    Lists files in a directory. Optionally show hidden files.\n    """\n    pass\n\n\n@app.command()\ndef create_user(\n    username: str = typer.Argument(..., help="Name of the new user"),\n    role: str = typer.Option("guest", "--role", help="Role for the new user"),\n):\n    """\n    Creates a new user with an optional role.\n    """\n    pass\n\n\n@app.command()\ndef delete_user(\n    user_id: str = typer.Argument(..., help="ID of user to delete"),\n    confirm: bool = typer.Option(False, "--confirm", help="Skip confirmation prompt"),\n):\n    """\n    Deletes a user by ID.\n    """\n    pass\n\n\n@app.command()\ndef generate_report(\n    report_type: str = typer.Argument(..., help="Type of report to generate"),\n    output_file: str = typer.Option("report.json", "--output", help="Output file name"),\n):\n    """\n    Generates a report of a specified type to a given file.\n    """\n    pass\n\n\n@app.command()\ndef backup_data(\n    directory: str = typer.Argument(..., help="Directory to store backups"),\n    full: bool = typer.Option(False, "--full", help="Perform a full backup"),\n):\n    """\n    Back up data to a specified directory, optionally performing a full backup.\n    """\n    pass\n\n\n@app.command()\ndef restore_data(\n    file_path: str = typer.Argument(..., help="File path of backup to restore"),\n    overwrite: bool = typer.Option(\n        False, "--overwrite", help="Overwrite existing data"\n    ),\n):\n    """\n    Restores data from a backup file.\n    """\n    pass\n\n\n@app.command()\ndef summarize_logs(\n    logs_path: str = typer.Argument(..., help="Path to log files"),\n    lines: int = typer.Option(100, "--lines", help="Number of lines to summarize"),\n):\n    """\n    Summarizes log data from a specified path, limiting lines.\n    """\n    pass\n\n\n@app.command()\ndef upload_file(\n    file_path: str = typer.Argument(..., help="Path of file to upload"),\n    destination: str = typer.Option(\n        "remote", "--destination", help="Destination label"\n    ),\n    secure: bool = typer.Option(True, "--secure", help="Use secure upload"),\n):\n    """\n    Uploads a file to a destination, optionally enforcing secure upload.\n    """\n    pass\n\n\n@app.command()\ndef download_file(\n    url: str = typer.Argument(..., help="URL of file to download"),\n    output_path: str = typer.Option(".", "--output", help="Local output path"),\n    retry: int = typer.Option(3, "--retry", help="Number of times to retry"),\n):\n    """\n    Downloads a file from a URL with a specified number of retries.\n    """\n    pass\n\n\n@app.command()\ndef filter_records(\n    source: str = typer.Argument(..., help="Data source to filter"),\n    query: str = typer.Option("", "--query", help="Filtering query string"),\n    limit: int = typer.Option(10, "--limit", help="Limit the number of results"),\n):\n    """\n    Filters records from a data source using a query, limiting the number of results.\n    """\n    pass\n\n\n@app.command()\ndef validate_schema(\n    schema_file: str = typer.Argument(..., help="Path to schema file"),\n    data_file: str = typer.Option("", "--data", help="Path to data file to check"),\n    strict: bool = typer.Option(True, "--strict", help="Enforce strict validation"),\n):\n    """\n    Validates a schema, optionally checking a data file with strict mode.\n    """\n    pass\n\n\n@app.command()\ndef sync_remotes(\n    remote_name: str = typer.Argument(..., help="Name of remote to sync"),\n    force: bool = typer.Option(\n        False, "--force", help="Force syncing without prompting"\n    ),\n):\n    """\n    Syncs with a remote repository, optionally forcing the operation.\n    """\n    pass\n\n\n@app.command()\ndef simulate_run(\n    scenario: str = typer.Argument(..., help="Simulation scenario"),\n    cycles: int = typer.Option(5, "--cycles", help="Number of cycles to simulate"),\n    debug: bool = typer.Option(False, "--debug", help="Show debug output"),\n):\n    """\n    Simulates a scenario for a given number of cycles, optionally showing debug output.\n    """\n    pass\n\n\n@app.command()\ndef compare_files(\n    file_a: str = typer.Argument(..., help="First file to compare"),\n    file_b: str = typer.Argument(..., help="Second file to compare"),\n    diff_only: bool = typer.Option(\n        False, "--diff-only", help="Show only the differences"\n    ),\n):\n    """\n    Compares two files, optionally showing only differences.\n    """\n    pass\n\n\n@app.command()\ndef encrypt_data(\n    input_path: str = typer.Argument(..., help="Path of the file to encrypt"),\n    output_path: str = typer.Option("encrypted.bin", "--output", help="Output file"),\n    algorithm: str = typer.Option("AES", "--algorithm", help="Encryption algorithm"),\n):\n    """\n    Encrypts data using a specified algorithm and writes to an output file.\n    """\n    pass\n\n\n@app.command()\ndef decrypt_data(\n    encrypted_file: str = typer.Argument(..., help="Path to encrypted file"),\n    key: str = typer.Option(..., "--key", help="Decryption key"),\n    output_path: str = typer.Option("decrypted.txt", "--output", help="Output file"),\n):\n    """\n    Decrypts an encrypted file using a key.\n    """\n    pass\n\n\n@app.command()\ndef transform_data(\n    input_file: str = typer.Argument(..., help="File to transform"),\n    output_format: str = typer.Option("json", "--format", help="Output format"),\n    columns: str = typer.Option(\n        None, "--columns", help="Comma-separated columns to extract"\n    ),\n):\n    """\n    Transforms data from a file into a specified format, optionally extracting columns.\n    """\n    pass\n\n\n@app.command()\ndef upload_changes(\n    source_dir: str = typer.Argument(..., help="Directory of changes to upload"),\n    incremental: bool = typer.Option(False, "--incremental", help="Incremental upload"),\n    confirm: bool = typer.Option(False, "--confirm", help="Skip confirmation prompt"),\n):\n    """\n    Uploads changes from a directory, optionally in incremental mode.\n    """\n    pass\n\n\n@app.command()\ndef migrate_database(\n    old_db: str = typer.Argument(..., help="Path to old database"),\n    new_db: str = typer.Option(..., "--new-db", help="Path to new database"),\n    dry_run: bool = typer.Option(\n        False, "--dry-run", help="Perform a trial run without changing data"\n    ),\n):\n    """\n    Migrates data from an old database to a new one, optionally doing a dry run.\n    """\n    pass\n\n\n@app.command()\ndef health_check(\n    service_name: str = typer.Argument(..., help="Service to check"),\n    timeout: int = typer.Option(30, "--timeout", help="Timeout in seconds"),\n    alert: bool = typer.Option(False, "--alert", help="Send alert if check fails"),\n):\n    """\n    Checks the health of a service within a specified timeout, optionally sending alerts.\n    """\n    pass\n\n\n@app.command()\ndef search_logs(\n    keyword: str = typer.Argument(..., help="Keyword to search"),\n    log_file: str = typer.Option("system.log", "--log", help="Log file to search in"),\n    case_sensitive: bool = typer.Option(\n        False, "--case-sensitive", help="Enable case-sensitive search"\n    ),\n):\n    """\n    Searches for a keyword in a log file, optionally using case-sensitive mode.\n    """\n    pass\n\n\n@app.command()\ndef stats_by_date(\n    date: str = typer.Argument(..., help="Date in YYYY-MM-DD to query stats"),\n    show_raw: bool = typer.Option(False, "--show-raw", help="Display raw data"),\n):\n    """\n    Shows statistics for a specific date, optionally displaying raw data.\n    """\n    pass\n\n\n@app.command()\ndef publish_update(\n    version: str = typer.Argument(..., help="Version tag to publish"),\n    channel: str = typer.Option("stable", "--channel", help="Release channel"),\n    note: str = typer.Option("", "--note", help="Release note or description"),\n):\n    """\n    Publishes an update to a specified release channel with optional notes.\n    """\n    pass\n\n\n@app.command()\ndef check_version(\n    local_path: str = typer.Argument(..., help="Local path to check"),\n    remote_url: str = typer.Option("", "--remote", help="Remote URL for comparison"),\n    detailed: bool = typer.Option(\n        False, "--detailed", help="Show detailed version info"\n    ),\n):\n    """\n    Checks the version of a local path against a remote source, optionally showing details.\n    """\n    pass\n\n\n@app.command()\ndef queue_task(\n    task_name: str = typer.Argument(..., help="Name of the task to queue"),\n    priority: int = typer.Option(1, "--priority", help="Priority of the task"),\n    delay: int = typer.Option(\n        0, "--delay", help="Delay in seconds before starting task"\n    ),\n):\n    """\n    Queues a task with a specified priority and optional delay.\n    """\n    pass\n\n\n@app.command()\ndef remove_task(\n    task_id: str = typer.Argument(..., help="ID of the task to remove"),\n    force: bool = typer.Option(False, "--force", help="Remove without confirmation"),\n):\n    """\n    Removes a queued task by ID, optionally forcing removal without confirmation.\n    """\n    pass\n\n\n@app.command()\ndef list_tasks(\n    show_all: bool = typer.Option(\n        False, "--all", help="Show all tasks, including completed"\n    ),\n    sort_by: str = typer.Option(\n        "priority", "--sort-by", help="Sort tasks by this field"\n    ),\n):\n    """\n    Lists tasks, optionally including completed tasks or sorting by a different field.\n    """\n    pass\n\n\n@app.command()\ndef inspect_task(\n    task_id: str = typer.Argument(..., help="ID of the task to inspect"),\n    json_output: bool = typer.Option(\n        False, "--json", help="Show output in JSON format"\n    ),\n):\n    """\n    Inspects a specific task by ID, optionally in JSON format.\n    """\n    pass\n\n</typer-commands>\n\n<scratch-pad>\n\t<scratchpad name="scratchpad.txt">\nsource_dir: /Users/idd/code/src/, incremental: true, confirm: true\n\nold_db: /Users/idd/code/src/db/old.db\n</scratchpad>\n\n\n</scratch-pad>\n\n<natural-language-request>\nHello?\n</natural-language-request>'}, {'role': 'assistant', 'content': 'python commands/template.py', 'prefix': True}], 'model': 'deepseek-chat'}}
2025-01-09 16:55:50.825 - RealTimeSTT: openai._base_client - DEBUG - Sending HTTP Request: POST https://api.deepseek.com/beta/chat/completions
2025-01-09 16:55:50.826 - RealTimeSTT: httpcore.connection - DEBUG - connect_tcp.started host='api.deepseek.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-01-09 16:55:50.871 - RealTimeSTT: httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x30f3ef470>
2025-01-09 16:55:50.871 - RealTimeSTT: httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x30ed5cfd0> server_hostname='api.deepseek.com' timeout=5.0
2025-01-09 16:55:50.904 - RealTimeSTT: httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x30f027b30>
2025-01-09 16:55:50.904 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-09 16:55:50.904 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_headers.complete
2025-01-09 16:55:50.904 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-09 16:55:50.904 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_body.complete
2025-01-09 16:55:50.904 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-09 16:55:53.440 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 09 Jan 2025 22:55:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'Set-Cookie', b'HWWAFSESID=664d888fc720de738c; path=/'), (b'vary', b'origin, access-control-request-method, access-control-request-headers'), (b'access-control-allow-credentials', b'true'), (b'x-ds-trace-id', b'e9048cf65038f4c568d6c87e62041795'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'x-content-type-options', b'nosniff'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'HWWAFSESTIME=1736463351029; path=/'), (b'Set-Cookie', b'__cf_bm=5lCSg6oixbEMbiHUJuYb1BQ.va6jm0etLzLarqzTKJg-1736463353-1.0.1.1-HVjeH3Mt7J2RyFq46PjCu7AiQPNytDeuxggm4JOYGmDPXpdVWrhpQAo5jRMTcgSg...GlL7w4UMLI1fIz6W.rA; path=/; expires=Thu, 09-Jan-25 23:25:53 GMT; domain=.deepseek.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8ff804674f92ad4f-ORD'), (b'Content-Encoding', b'gzip')])
2025-01-09 16:55:53.442 - RealTimeSTT: httpx - INFO - HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
2025-01-09 16:55:53.442 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-09 16:55:53.443 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_body.complete
2025-01-09 16:55:53.443 - RealTimeSTT: httpcore.http11 - DEBUG - response_closed.started
2025-01-09 16:55:53.443 - RealTimeSTT: httpcore.http11 - DEBUG - response_closed.complete
2025-01-09 16:55:53.443 - RealTimeSTT: openai._base_client - DEBUG - HTTP Response: POST https://api.deepseek.com/beta/chat/completions "200 OK" Headers([('date', 'Thu, 09 Jan 2025 22:55:53 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('set-cookie', 'HWWAFSESID=664d888fc720de738c; path=/'), ('vary', 'origin, access-control-request-method, access-control-request-headers'), ('access-control-allow-credentials', 'true'), ('x-ds-trace-id', 'e9048cf65038f4c568d6c87e62041795'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', 'HWWAFSESTIME=1736463351029; path=/'), ('set-cookie', '__cf_bm=5lCSg6oixbEMbiHUJuYb1BQ.va6jm0etLzLarqzTKJg-1736463353-1.0.1.1-HVjeH3Mt7J2RyFq46PjCu7AiQPNytDeuxggm4JOYGmDPXpdVWrhpQAo5jRMTcgSg...GlL7w4UMLI1fIz6W.rA; path=/; expires=Thu, 09-Jan-25 23:25:53 GMT; domain=.deepseek.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '8ff804674f92ad4f-ORD'), ('content-encoding', 'gzip')])
2025-01-09 16:55:53.444 - RealTimeSTT: openai._base_client - DEBUG - request_id: None
2025-01-09 16:55:53.448 - RealTimeSTT: main - INFO - ⚡ Executing command: `python commands/template.py upload-changes /Users/idd/code/src/ --incremental --confirm && python commands/template.py migrate-database /Users/idd/code/src/db/old.db --new-db /Users/idd/code/src/db/new.db`
2025-01-09 16:55:53.573 - RealTimeSTT: main - INFO - ✅ Command execution completed successfully
2025-01-09 16:55:53.573 - RealTimeSTT: main - INFO - 📄 Output:

2025-01-09 16:56:16.175 - RealTimeSTT: root - INFO - voice activity detected
2025-01-09 16:56:16.175 - RealTimeSTT: root - INFO - recording started
2025-01-09 16:56:16.175 - RealTimeSTT: root - INFO - State changed from 'listening' to 'recording'
2025-01-09 16:56:16.175 - RealTimeSTT: root - DEBUG - Waiting for recording stop
2025-01-09 16:56:17.968 - RealTimeSTT: root - INFO - recording stopped
2025-01-09 16:56:17.969 - RealTimeSTT: root - INFO - State changed from 'recording' to 'inactive'
2025-01-09 16:56:18.069 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'transcribing'
2025-01-09 16:56:18.070 - RealTimeSTT: root - DEBUG - Adding transcription request, no early transcription started
2025-01-09 16:56:18.075 - RealTimeSTT: root - DEBUG - Receive from parent_transcription_pipe after sendiung transcription request, transcribe_count: 1
2025-01-09 16:56:18.099 - RealTimeSTT: root - INFO - State changed from 'transcribing' to 'inactive'
2025-01-09 16:56:18.518 - RealTimeSTT: root - DEBUG - Model tiny completed transcription in 0.45 seconds
2025-01-09 16:56:18.519 - RealTimeSTT: root - INFO - Setting listen time
2025-01-09 16:56:18.519 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'listening'
2025-01-09 16:56:18.519 - RealTimeSTT: main - INFO - 📂 Loading typer file...
2025-01-09 16:56:18.519 - RealTimeSTT: main - INFO - 📝 Loading scratchpad files...
2025-01-09 16:56:18.519 - RealTimeSTT: root - DEBUG - Waiting for recording start
2025-01-09 16:56:18.519 - RealTimeSTT: main - INFO - 📝 Loading prompt template...
2025-01-09 16:56:18.520 - RealTimeSTT: main - INFO - 🤖 Processing text with DeepSeek...
2025-01-09 16:56:18.521 - RealTimeSTT: openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '<purpose>\n    Given the available python typer-commands, the scratch-pad and the natural-language-request produce the correct typer CLI command.\n</purpose>\n\n<instructions>\n    <instruction>We only want the CLI command as output. No explanations or additional text. The command will be immediately executed.</instruction>\n    <instruction>Focus on generating a python typer-based command that can be used with a Python script called main.py.</instruction>\n    <instruction>All commands must be fully valid typer commands from the typer-commands file with arguments and flags infered based on the natural-language-request.</instruction>\n    <instruction>Be sure to use - for the function names instead of _ (example: \'hello-world\' instead of \'hello_world\')</instruction>\n    <instruction>Don\'t use = for arguments, use spaces instead (example: \'hello-world --name John\' instead of \'hello-world --name=John\')</instruction>\n    <instruction>If multiple commands are requested chain them together with \'&&\' so they run back to back in the terminal only if the previous command succeeds.</instruction>\n    <instruction>Respond with the command only, we will prefix the correct python and file to it.</instruction>\n    <instruction>If the user asks for a command (or something nonsense) that is not in the typer-commands file, respond with an empty string.</instruction>\n</instructions>\n\n<typer-commands>\nimport typer\nfrom typing import Optional\n\napp = typer.Typer()\n\n\n@app.command()\ndef ping_server(\n    wait: bool = typer.Option(False, "--wait", help="Wait for server response?")\n):\n    """\n    Pings the server, optionally waiting for a response.\n    """\n    pass\n\n\n@app.command()\ndef show_config(\n    verbose: bool = typer.Option(False, "--verbose", help="Show config in detail?")\n):\n    """\n    Shows the current configuration.\n    """\n    pass\n\n\n@app.command()\ndef list_files(\n    path: str = typer.Argument(..., help="Path to list files from"),\n    all_files: bool = typer.Option(False, "--all", help="Include hidden files"),\n):\n    """\n    Lists files in a directory. Optionally show hidden files.\n    """\n    pass\n\n\n@app.command()\ndef create_user(\n    username: str = typer.Argument(..., help="Name of the new user"),\n    role: str = typer.Option("guest", "--role", help="Role for the new user"),\n):\n    """\n    Creates a new user with an optional role.\n    """\n    pass\n\n\n@app.command()\ndef delete_user(\n    user_id: str = typer.Argument(..., help="ID of user to delete"),\n    confirm: bool = typer.Option(False, "--confirm", help="Skip confirmation prompt"),\n):\n    """\n    Deletes a user by ID.\n    """\n    pass\n\n\n@app.command()\ndef generate_report(\n    report_type: str = typer.Argument(..., help="Type of report to generate"),\n    output_file: str = typer.Option("report.json", "--output", help="Output file name"),\n):\n    """\n    Generates a report of a specified type to a given file.\n    """\n    pass\n\n\n@app.command()\ndef backup_data(\n    directory: str = typer.Argument(..., help="Directory to store backups"),\n    full: bool = typer.Option(False, "--full", help="Perform a full backup"),\n):\n    """\n    Back up data to a specified directory, optionally performing a full backup.\n    """\n    pass\n\n\n@app.command()\ndef restore_data(\n    file_path: str = typer.Argument(..., help="File path of backup to restore"),\n    overwrite: bool = typer.Option(\n        False, "--overwrite", help="Overwrite existing data"\n    ),\n):\n    """\n    Restores data from a backup file.\n    """\n    pass\n\n\n@app.command()\ndef summarize_logs(\n    logs_path: str = typer.Argument(..., help="Path to log files"),\n    lines: int = typer.Option(100, "--lines", help="Number of lines to summarize"),\n):\n    """\n    Summarizes log data from a specified path, limiting lines.\n    """\n    pass\n\n\n@app.command()\ndef upload_file(\n    file_path: str = typer.Argument(..., help="Path of file to upload"),\n    destination: str = typer.Option(\n        "remote", "--destination", help="Destination label"\n    ),\n    secure: bool = typer.Option(True, "--secure", help="Use secure upload"),\n):\n    """\n    Uploads a file to a destination, optionally enforcing secure upload.\n    """\n    pass\n\n\n@app.command()\ndef download_file(\n    url: str = typer.Argument(..., help="URL of file to download"),\n    output_path: str = typer.Option(".", "--output", help="Local output path"),\n    retry: int = typer.Option(3, "--retry", help="Number of times to retry"),\n):\n    """\n    Downloads a file from a URL with a specified number of retries.\n    """\n    pass\n\n\n@app.command()\ndef filter_records(\n    source: str = typer.Argument(..., help="Data source to filter"),\n    query: str = typer.Option("", "--query", help="Filtering query string"),\n    limit: int = typer.Option(10, "--limit", help="Limit the number of results"),\n):\n    """\n    Filters records from a data source using a query, limiting the number of results.\n    """\n    pass\n\n\n@app.command()\ndef validate_schema(\n    schema_file: str = typer.Argument(..., help="Path to schema file"),\n    data_file: str = typer.Option("", "--data", help="Path to data file to check"),\n    strict: bool = typer.Option(True, "--strict", help="Enforce strict validation"),\n):\n    """\n    Validates a schema, optionally checking a data file with strict mode.\n    """\n    pass\n\n\n@app.command()\ndef sync_remotes(\n    remote_name: str = typer.Argument(..., help="Name of remote to sync"),\n    force: bool = typer.Option(\n        False, "--force", help="Force syncing without prompting"\n    ),\n):\n    """\n    Syncs with a remote repository, optionally forcing the operation.\n    """\n    pass\n\n\n@app.command()\ndef simulate_run(\n    scenario: str = typer.Argument(..., help="Simulation scenario"),\n    cycles: int = typer.Option(5, "--cycles", help="Number of cycles to simulate"),\n    debug: bool = typer.Option(False, "--debug", help="Show debug output"),\n):\n    """\n    Simulates a scenario for a given number of cycles, optionally showing debug output.\n    """\n    pass\n\n\n@app.command()\ndef compare_files(\n    file_a: str = typer.Argument(..., help="First file to compare"),\n    file_b: str = typer.Argument(..., help="Second file to compare"),\n    diff_only: bool = typer.Option(\n        False, "--diff-only", help="Show only the differences"\n    ),\n):\n    """\n    Compares two files, optionally showing only differences.\n    """\n    pass\n\n\n@app.command()\ndef encrypt_data(\n    input_path: str = typer.Argument(..., help="Path of the file to encrypt"),\n    output_path: str = typer.Option("encrypted.bin", "--output", help="Output file"),\n    algorithm: str = typer.Option("AES", "--algorithm", help="Encryption algorithm"),\n):\n    """\n    Encrypts data using a specified algorithm and writes to an output file.\n    """\n    pass\n\n\n@app.command()\ndef decrypt_data(\n    encrypted_file: str = typer.Argument(..., help="Path to encrypted file"),\n    key: str = typer.Option(..., "--key", help="Decryption key"),\n    output_path: str = typer.Option("decrypted.txt", "--output", help="Output file"),\n):\n    """\n    Decrypts an encrypted file using a key.\n    """\n    pass\n\n\n@app.command()\ndef transform_data(\n    input_file: str = typer.Argument(..., help="File to transform"),\n    output_format: str = typer.Option("json", "--format", help="Output format"),\n    columns: str = typer.Option(\n        None, "--columns", help="Comma-separated columns to extract"\n    ),\n):\n    """\n    Transforms data from a file into a specified format, optionally extracting columns.\n    """\n    pass\n\n\n@app.command()\ndef upload_changes(\n    source_dir: str = typer.Argument(..., help="Directory of changes to upload"),\n    incremental: bool = typer.Option(False, "--incremental", help="Incremental upload"),\n    confirm: bool = typer.Option(False, "--confirm", help="Skip confirmation prompt"),\n):\n    """\n    Uploads changes from a directory, optionally in incremental mode.\n    """\n    pass\n\n\n@app.command()\ndef migrate_database(\n    old_db: str = typer.Argument(..., help="Path to old database"),\n    new_db: str = typer.Option(..., "--new-db", help="Path to new database"),\n    dry_run: bool = typer.Option(\n        False, "--dry-run", help="Perform a trial run without changing data"\n    ),\n):\n    """\n    Migrates data from an old database to a new one, optionally doing a dry run.\n    """\n    pass\n\n\n@app.command()\ndef health_check(\n    service_name: str = typer.Argument(..., help="Service to check"),\n    timeout: int = typer.Option(30, "--timeout", help="Timeout in seconds"),\n    alert: bool = typer.Option(False, "--alert", help="Send alert if check fails"),\n):\n    """\n    Checks the health of a service within a specified timeout, optionally sending alerts.\n    """\n    pass\n\n\n@app.command()\ndef search_logs(\n    keyword: str = typer.Argument(..., help="Keyword to search"),\n    log_file: str = typer.Option("system.log", "--log", help="Log file to search in"),\n    case_sensitive: bool = typer.Option(\n        False, "--case-sensitive", help="Enable case-sensitive search"\n    ),\n):\n    """\n    Searches for a keyword in a log file, optionally using case-sensitive mode.\n    """\n    pass\n\n\n@app.command()\ndef stats_by_date(\n    date: str = typer.Argument(..., help="Date in YYYY-MM-DD to query stats"),\n    show_raw: bool = typer.Option(False, "--show-raw", help="Display raw data"),\n):\n    """\n    Shows statistics for a specific date, optionally displaying raw data.\n    """\n    pass\n\n\n@app.command()\ndef publish_update(\n    version: str = typer.Argument(..., help="Version tag to publish"),\n    channel: str = typer.Option("stable", "--channel", help="Release channel"),\n    note: str = typer.Option("", "--note", help="Release note or description"),\n):\n    """\n    Publishes an update to a specified release channel with optional notes.\n    """\n    pass\n\n\n@app.command()\ndef check_version(\n    local_path: str = typer.Argument(..., help="Local path to check"),\n    remote_url: str = typer.Option("", "--remote", help="Remote URL for comparison"),\n    detailed: bool = typer.Option(\n        False, "--detailed", help="Show detailed version info"\n    ),\n):\n    """\n    Checks the version of a local path against a remote source, optionally showing details.\n    """\n    pass\n\n\n@app.command()\ndef queue_task(\n    task_name: str = typer.Argument(..., help="Name of the task to queue"),\n    priority: int = typer.Option(1, "--priority", help="Priority of the task"),\n    delay: int = typer.Option(\n        0, "--delay", help="Delay in seconds before starting task"\n    ),\n):\n    """\n    Queues a task with a specified priority and optional delay.\n    """\n    pass\n\n\n@app.command()\ndef remove_task(\n    task_id: str = typer.Argument(..., help="ID of the task to remove"),\n    force: bool = typer.Option(False, "--force", help="Remove without confirmation"),\n):\n    """\n    Removes a queued task by ID, optionally forcing removal without confirmation.\n    """\n    pass\n\n\n@app.command()\ndef list_tasks(\n    show_all: bool = typer.Option(\n        False, "--all", help="Show all tasks, including completed"\n    ),\n    sort_by: str = typer.Option(\n        "priority", "--sort-by", help="Sort tasks by this field"\n    ),\n):\n    """\n    Lists tasks, optionally including completed tasks or sorting by a different field.\n    """\n    pass\n\n\n@app.command()\ndef inspect_task(\n    task_id: str = typer.Argument(..., help="ID of the task to inspect"),\n    json_output: bool = typer.Option(\n        False, "--json", help="Show output in JSON format"\n    ),\n):\n    """\n    Inspects a specific task by ID, optionally in JSON format.\n    """\n    pass\n\n</typer-commands>\n\n<scratch-pad>\n\t<scratchpad name="scratchpad.txt">\nsource_dir: /Users/idd/code/src/, incremental: true, confirm: true\n\nold_db: /Users/idd/code/src/db/old.db\n</scratchpad>\n\n\n</scratch-pad>\n\n<natural-language-request>\nLet\'s go ahead and ping the server.\n</natural-language-request>'}, {'role': 'assistant', 'content': 'python commands/template.py', 'prefix': True}], 'model': 'deepseek-chat'}}
2025-01-09 16:56:18.522 - RealTimeSTT: openai._base_client - DEBUG - Sending HTTP Request: POST https://api.deepseek.com/beta/chat/completions
2025-01-09 16:56:18.522 - RealTimeSTT: httpcore.connection - DEBUG - close.started
2025-01-09 16:56:18.522 - RealTimeSTT: httpcore.connection - DEBUG - close.complete
2025-01-09 16:56:18.522 - RealTimeSTT: httpcore.connection - DEBUG - connect_tcp.started host='api.deepseek.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-01-09 16:56:18.547 - RealTimeSTT: httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x30ee11f10>
2025-01-09 16:56:18.547 - RealTimeSTT: httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x30ed5cfd0> server_hostname='api.deepseek.com' timeout=5.0
2025-01-09 16:56:18.580 - RealTimeSTT: httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x30ee118b0>
2025-01-09 16:56:18.580 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-09 16:56:18.581 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_headers.complete
2025-01-09 16:56:18.581 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-09 16:56:18.581 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_body.complete
2025-01-09 16:56:18.581 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-09 16:56:19.858 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 09 Jan 2025 22:56:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'vary', b'origin, access-control-request-method, access-control-request-headers'), (b'access-control-allow-credentials', b'true'), (b'x-ds-trace-id', b'93246b9d1bdbcd2a7e0c6503c0b0b576'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'x-content-type-options', b'nosniff'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8ff805143f2beb69-ORD'), (b'Content-Encoding', b'gzip')])
2025-01-09 16:56:19.860 - RealTimeSTT: httpx - INFO - HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
2025-01-09 16:56:19.860 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-09 16:56:19.861 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_body.complete
2025-01-09 16:56:19.861 - RealTimeSTT: httpcore.http11 - DEBUG - response_closed.started
2025-01-09 16:56:19.861 - RealTimeSTT: httpcore.http11 - DEBUG - response_closed.complete
2025-01-09 16:56:19.861 - RealTimeSTT: openai._base_client - DEBUG - HTTP Response: POST https://api.deepseek.com/beta/chat/completions "200 OK" Headers({'date': 'Thu, 09 Jan 2025 22:56:19 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'vary': 'origin, access-control-request-method, access-control-request-headers', 'access-control-allow-credentials': 'true', 'x-ds-trace-id': '93246b9d1bdbcd2a7e0c6503c0b0b576', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8ff805143f2beb69-ORD', 'content-encoding': 'gzip'})
2025-01-09 16:56:19.861 - RealTimeSTT: openai._base_client - DEBUG - request_id: None
2025-01-09 16:56:19.862 - RealTimeSTT: main - INFO - ⚡ Executing command: `python commands/template.py ping-server`
2025-01-09 16:56:19.989 - RealTimeSTT: main - INFO - ✅ Command execution completed successfully
2025-01-09 16:56:19.989 - RealTimeSTT: main - INFO - 📄 Output:

2025-01-09 16:56:27.377 - RealTimeSTT: root - INFO - voice activity detected
2025-01-09 16:56:27.377 - RealTimeSTT: root - INFO - recording started
2025-01-09 16:56:27.377 - RealTimeSTT: root - INFO - State changed from 'listening' to 'recording'
2025-01-09 16:56:27.378 - RealTimeSTT: root - DEBUG - Waiting for recording stop
2025-01-09 16:56:30.641 - RealTimeSTT: root - INFO - recording stopped
2025-01-09 16:56:30.642 - RealTimeSTT: root - INFO - State changed from 'recording' to 'inactive'
2025-01-09 16:56:30.715 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'transcribing'
2025-01-09 16:56:30.717 - RealTimeSTT: root - DEBUG - Adding transcription request, no early transcription started
2025-01-09 16:56:30.730 - RealTimeSTT: root - DEBUG - Receive from parent_transcription_pipe after sendiung transcription request, transcribe_count: 1
2025-01-09 16:56:30.769 - RealTimeSTT: root - INFO - State changed from 'transcribing' to 'inactive'
2025-01-09 16:56:31.166 - RealTimeSTT: root - DEBUG - Model tiny completed transcription in 0.45 seconds
2025-01-09 16:56:31.167 - RealTimeSTT: root - INFO - Setting listen time
2025-01-09 16:56:31.167 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'listening'
2025-01-09 16:56:31.167 - RealTimeSTT: main - INFO - 📂 Loading typer file...
2025-01-09 16:56:31.167 - RealTimeSTT: root - DEBUG - Waiting for recording start
2025-01-09 16:56:31.167 - RealTimeSTT: main - INFO - 📝 Loading scratchpad files...
2025-01-09 16:56:31.167 - RealTimeSTT: main - INFO - 📝 Loading prompt template...
2025-01-09 16:56:31.167 - RealTimeSTT: main - INFO - 🤖 Processing text with DeepSeek...
2025-01-09 16:56:31.169 - RealTimeSTT: openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '<purpose>\n    Given the available python typer-commands, the scratch-pad and the natural-language-request produce the correct typer CLI command.\n</purpose>\n\n<instructions>\n    <instruction>We only want the CLI command as output. No explanations or additional text. The command will be immediately executed.</instruction>\n    <instruction>Focus on generating a python typer-based command that can be used with a Python script called main.py.</instruction>\n    <instruction>All commands must be fully valid typer commands from the typer-commands file with arguments and flags infered based on the natural-language-request.</instruction>\n    <instruction>Be sure to use - for the function names instead of _ (example: \'hello-world\' instead of \'hello_world\')</instruction>\n    <instruction>Don\'t use = for arguments, use spaces instead (example: \'hello-world --name John\' instead of \'hello-world --name=John\')</instruction>\n    <instruction>If multiple commands are requested chain them together with \'&&\' so they run back to back in the terminal only if the previous command succeeds.</instruction>\n    <instruction>Respond with the command only, we will prefix the correct python and file to it.</instruction>\n    <instruction>If the user asks for a command (or something nonsense) that is not in the typer-commands file, respond with an empty string.</instruction>\n</instructions>\n\n<typer-commands>\nimport typer\nfrom typing import Optional\n\napp = typer.Typer()\n\n\n@app.command()\ndef ping_server(\n    wait: bool = typer.Option(False, "--wait", help="Wait for server response?")\n):\n    """\n    Pings the server, optionally waiting for a response.\n    """\n    pass\n\n\n@app.command()\ndef show_config(\n    verbose: bool = typer.Option(False, "--verbose", help="Show config in detail?")\n):\n    """\n    Shows the current configuration.\n    """\n    pass\n\n\n@app.command()\ndef list_files(\n    path: str = typer.Argument(..., help="Path to list files from"),\n    all_files: bool = typer.Option(False, "--all", help="Include hidden files"),\n):\n    """\n    Lists files in a directory. Optionally show hidden files.\n    """\n    pass\n\n\n@app.command()\ndef create_user(\n    username: str = typer.Argument(..., help="Name of the new user"),\n    role: str = typer.Option("guest", "--role", help="Role for the new user"),\n):\n    """\n    Creates a new user with an optional role.\n    """\n    pass\n\n\n@app.command()\ndef delete_user(\n    user_id: str = typer.Argument(..., help="ID of user to delete"),\n    confirm: bool = typer.Option(False, "--confirm", help="Skip confirmation prompt"),\n):\n    """\n    Deletes a user by ID.\n    """\n    pass\n\n\n@app.command()\ndef generate_report(\n    report_type: str = typer.Argument(..., help="Type of report to generate"),\n    output_file: str = typer.Option("report.json", "--output", help="Output file name"),\n):\n    """\n    Generates a report of a specified type to a given file.\n    """\n    pass\n\n\n@app.command()\ndef backup_data(\n    directory: str = typer.Argument(..., help="Directory to store backups"),\n    full: bool = typer.Option(False, "--full", help="Perform a full backup"),\n):\n    """\n    Back up data to a specified directory, optionally performing a full backup.\n    """\n    pass\n\n\n@app.command()\ndef restore_data(\n    file_path: str = typer.Argument(..., help="File path of backup to restore"),\n    overwrite: bool = typer.Option(\n        False, "--overwrite", help="Overwrite existing data"\n    ),\n):\n    """\n    Restores data from a backup file.\n    """\n    pass\n\n\n@app.command()\ndef summarize_logs(\n    logs_path: str = typer.Argument(..., help="Path to log files"),\n    lines: int = typer.Option(100, "--lines", help="Number of lines to summarize"),\n):\n    """\n    Summarizes log data from a specified path, limiting lines.\n    """\n    pass\n\n\n@app.command()\ndef upload_file(\n    file_path: str = typer.Argument(..., help="Path of file to upload"),\n    destination: str = typer.Option(\n        "remote", "--destination", help="Destination label"\n    ),\n    secure: bool = typer.Option(True, "--secure", help="Use secure upload"),\n):\n    """\n    Uploads a file to a destination, optionally enforcing secure upload.\n    """\n    pass\n\n\n@app.command()\ndef download_file(\n    url: str = typer.Argument(..., help="URL of file to download"),\n    output_path: str = typer.Option(".", "--output", help="Local output path"),\n    retry: int = typer.Option(3, "--retry", help="Number of times to retry"),\n):\n    """\n    Downloads a file from a URL with a specified number of retries.\n    """\n    pass\n\n\n@app.command()\ndef filter_records(\n    source: str = typer.Argument(..., help="Data source to filter"),\n    query: str = typer.Option("", "--query", help="Filtering query string"),\n    limit: int = typer.Option(10, "--limit", help="Limit the number of results"),\n):\n    """\n    Filters records from a data source using a query, limiting the number of results.\n    """\n    pass\n\n\n@app.command()\ndef validate_schema(\n    schema_file: str = typer.Argument(..., help="Path to schema file"),\n    data_file: str = typer.Option("", "--data", help="Path to data file to check"),\n    strict: bool = typer.Option(True, "--strict", help="Enforce strict validation"),\n):\n    """\n    Validates a schema, optionally checking a data file with strict mode.\n    """\n    pass\n\n\n@app.command()\ndef sync_remotes(\n    remote_name: str = typer.Argument(..., help="Name of remote to sync"),\n    force: bool = typer.Option(\n        False, "--force", help="Force syncing without prompting"\n    ),\n):\n    """\n    Syncs with a remote repository, optionally forcing the operation.\n    """\n    pass\n\n\n@app.command()\ndef simulate_run(\n    scenario: str = typer.Argument(..., help="Simulation scenario"),\n    cycles: int = typer.Option(5, "--cycles", help="Number of cycles to simulate"),\n    debug: bool = typer.Option(False, "--debug", help="Show debug output"),\n):\n    """\n    Simulates a scenario for a given number of cycles, optionally showing debug output.\n    """\n    pass\n\n\n@app.command()\ndef compare_files(\n    file_a: str = typer.Argument(..., help="First file to compare"),\n    file_b: str = typer.Argument(..., help="Second file to compare"),\n    diff_only: bool = typer.Option(\n        False, "--diff-only", help="Show only the differences"\n    ),\n):\n    """\n    Compares two files, optionally showing only differences.\n    """\n    pass\n\n\n@app.command()\ndef encrypt_data(\n    input_path: str = typer.Argument(..., help="Path of the file to encrypt"),\n    output_path: str = typer.Option("encrypted.bin", "--output", help="Output file"),\n    algorithm: str = typer.Option("AES", "--algorithm", help="Encryption algorithm"),\n):\n    """\n    Encrypts data using a specified algorithm and writes to an output file.\n    """\n    pass\n\n\n@app.command()\ndef decrypt_data(\n    encrypted_file: str = typer.Argument(..., help="Path to encrypted file"),\n    key: str = typer.Option(..., "--key", help="Decryption key"),\n    output_path: str = typer.Option("decrypted.txt", "--output", help="Output file"),\n):\n    """\n    Decrypts an encrypted file using a key.\n    """\n    pass\n\n\n@app.command()\ndef transform_data(\n    input_file: str = typer.Argument(..., help="File to transform"),\n    output_format: str = typer.Option("json", "--format", help="Output format"),\n    columns: str = typer.Option(\n        None, "--columns", help="Comma-separated columns to extract"\n    ),\n):\n    """\n    Transforms data from a file into a specified format, optionally extracting columns.\n    """\n    pass\n\n\n@app.command()\ndef upload_changes(\n    source_dir: str = typer.Argument(..., help="Directory of changes to upload"),\n    incremental: bool = typer.Option(False, "--incremental", help="Incremental upload"),\n    confirm: bool = typer.Option(False, "--confirm", help="Skip confirmation prompt"),\n):\n    """\n    Uploads changes from a directory, optionally in incremental mode.\n    """\n    pass\n\n\n@app.command()\ndef migrate_database(\n    old_db: str = typer.Argument(..., help="Path to old database"),\n    new_db: str = typer.Option(..., "--new-db", help="Path to new database"),\n    dry_run: bool = typer.Option(\n        False, "--dry-run", help="Perform a trial run without changing data"\n    ),\n):\n    """\n    Migrates data from an old database to a new one, optionally doing a dry run.\n    """\n    pass\n\n\n@app.command()\ndef health_check(\n    service_name: str = typer.Argument(..., help="Service to check"),\n    timeout: int = typer.Option(30, "--timeout", help="Timeout in seconds"),\n    alert: bool = typer.Option(False, "--alert", help="Send alert if check fails"),\n):\n    """\n    Checks the health of a service within a specified timeout, optionally sending alerts.\n    """\n    pass\n\n\n@app.command()\ndef search_logs(\n    keyword: str = typer.Argument(..., help="Keyword to search"),\n    log_file: str = typer.Option("system.log", "--log", help="Log file to search in"),\n    case_sensitive: bool = typer.Option(\n        False, "--case-sensitive", help="Enable case-sensitive search"\n    ),\n):\n    """\n    Searches for a keyword in a log file, optionally using case-sensitive mode.\n    """\n    pass\n\n\n@app.command()\ndef stats_by_date(\n    date: str = typer.Argument(..., help="Date in YYYY-MM-DD to query stats"),\n    show_raw: bool = typer.Option(False, "--show-raw", help="Display raw data"),\n):\n    """\n    Shows statistics for a specific date, optionally displaying raw data.\n    """\n    pass\n\n\n@app.command()\ndef publish_update(\n    version: str = typer.Argument(..., help="Version tag to publish"),\n    channel: str = typer.Option("stable", "--channel", help="Release channel"),\n    note: str = typer.Option("", "--note", help="Release note or description"),\n):\n    """\n    Publishes an update to a specified release channel with optional notes.\n    """\n    pass\n\n\n@app.command()\ndef check_version(\n    local_path: str = typer.Argument(..., help="Local path to check"),\n    remote_url: str = typer.Option("", "--remote", help="Remote URL for comparison"),\n    detailed: bool = typer.Option(\n        False, "--detailed", help="Show detailed version info"\n    ),\n):\n    """\n    Checks the version of a local path against a remote source, optionally showing details.\n    """\n    pass\n\n\n@app.command()\ndef queue_task(\n    task_name: str = typer.Argument(..., help="Name of the task to queue"),\n    priority: int = typer.Option(1, "--priority", help="Priority of the task"),\n    delay: int = typer.Option(\n        0, "--delay", help="Delay in seconds before starting task"\n    ),\n):\n    """\n    Queues a task with a specified priority and optional delay.\n    """\n    pass\n\n\n@app.command()\ndef remove_task(\n    task_id: str = typer.Argument(..., help="ID of the task to remove"),\n    force: bool = typer.Option(False, "--force", help="Remove without confirmation"),\n):\n    """\n    Removes a queued task by ID, optionally forcing removal without confirmation.\n    """\n    pass\n\n\n@app.command()\ndef list_tasks(\n    show_all: bool = typer.Option(\n        False, "--all", help="Show all tasks, including completed"\n    ),\n    sort_by: str = typer.Option(\n        "priority", "--sort-by", help="Sort tasks by this field"\n    ),\n):\n    """\n    Lists tasks, optionally including completed tasks or sorting by a different field.\n    """\n    pass\n\n\n@app.command()\ndef inspect_task(\n    task_id: str = typer.Argument(..., help="ID of the task to inspect"),\n    json_output: bool = typer.Option(\n        False, "--json", help="Show output in JSON format"\n    ),\n):\n    """\n    Inspects a specific task by ID, optionally in JSON format.\n    """\n    pass\n\n</typer-commands>\n\n<scratch-pad>\n\t<scratchpad name="scratchpad.txt">\nsource_dir: /Users/idd/code/src/, incremental: true, confirm: true\n\nold_db: /Users/idd/code/src/db/old.db\n</scratchpad>\n\n\n</scratch-pad>\n\n<natural-language-request>\nShow the config you use for both mode.\n</natural-language-request>'}, {'role': 'assistant', 'content': 'python commands/template.py', 'prefix': True}], 'model': 'deepseek-chat'}}
2025-01-09 16:56:31.170 - RealTimeSTT: openai._base_client - DEBUG - Sending HTTP Request: POST https://api.deepseek.com/beta/chat/completions
2025-01-09 16:56:31.170 - RealTimeSTT: httpcore.connection - DEBUG - close.started
2025-01-09 16:56:31.170 - RealTimeSTT: httpcore.connection - DEBUG - close.complete
2025-01-09 16:56:31.170 - RealTimeSTT: httpcore.connection - DEBUG - connect_tcp.started host='api.deepseek.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-01-09 16:56:31.206 - RealTimeSTT: httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x30ee3cbf0>
2025-01-09 16:56:31.207 - RealTimeSTT: httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x30ed5cfd0> server_hostname='api.deepseek.com' timeout=5.0
2025-01-09 16:56:31.241 - RealTimeSTT: httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x30ee3c830>
2025-01-09 16:56:31.241 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-09 16:56:31.242 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_headers.complete
2025-01-09 16:56:31.242 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-09 16:56:31.242 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_body.complete
2025-01-09 16:56:31.242 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-09 16:56:33.169 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 09 Jan 2025 22:56:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'vary', b'origin, access-control-request-method, access-control-request-headers'), (b'access-control-allow-credentials', b'true'), (b'x-ds-trace-id', b'e43cdf7b171e2468337d0b3b83ebd793'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'x-content-type-options', b'nosniff'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8ff805636c63e996-ORD'), (b'Content-Encoding', b'gzip')])
2025-01-09 16:56:33.170 - RealTimeSTT: httpx - INFO - HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
2025-01-09 16:56:33.170 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-09 16:56:33.170 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_body.complete
2025-01-09 16:56:33.170 - RealTimeSTT: httpcore.http11 - DEBUG - response_closed.started
2025-01-09 16:56:33.170 - RealTimeSTT: httpcore.http11 - DEBUG - response_closed.complete
2025-01-09 16:56:33.170 - RealTimeSTT: openai._base_client - DEBUG - HTTP Response: POST https://api.deepseek.com/beta/chat/completions "200 OK" Headers({'date': 'Thu, 09 Jan 2025 22:56:33 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'vary': 'origin, access-control-request-method, access-control-request-headers', 'access-control-allow-credentials': 'true', 'x-ds-trace-id': 'e43cdf7b171e2468337d0b3b83ebd793', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8ff805636c63e996-ORD', 'content-encoding': 'gzip'})
2025-01-09 16:56:33.170 - RealTimeSTT: openai._base_client - DEBUG - request_id: None
2025-01-09 16:56:33.171 - RealTimeSTT: main - INFO - ⚡ Executing command: `python commands/template.py show-config --verbose`
2025-01-09 16:56:33.280 - RealTimeSTT: main - INFO - ✅ Command execution completed successfully
2025-01-09 16:56:33.281 - RealTimeSTT: main - INFO - 📄 Output:

2025-01-09 16:56:48.306 - RealTimeSTT: root - INFO - voice activity detected
2025-01-09 16:56:48.306 - RealTimeSTT: root - INFO - recording started
2025-01-09 16:56:48.306 - RealTimeSTT: root - INFO - State changed from 'listening' to 'recording'
2025-01-09 16:56:48.307 - RealTimeSTT: root - DEBUG - Waiting for recording stop
2025-01-09 16:56:52.146 - RealTimeSTT: root - INFO - recording stopped
2025-01-09 16:56:52.146 - RealTimeSTT: root - INFO - State changed from 'recording' to 'inactive'
2025-01-09 16:56:52.152 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'transcribing'
2025-01-09 16:56:52.152 - RealTimeSTT: root - DEBUG - Adding transcription request, no early transcription started
2025-01-09 16:56:52.153 - RealTimeSTT: root - DEBUG - Receive from parent_transcription_pipe after sendiung transcription request, transcribe_count: 1
2025-01-09 16:56:52.212 - RealTimeSTT: root - INFO - State changed from 'transcribing' to 'inactive'
2025-01-09 16:56:52.608 - RealTimeSTT: root - DEBUG - Model tiny completed transcription in 0.46 seconds
2025-01-09 16:56:52.608 - RealTimeSTT: root - INFO - Setting listen time
2025-01-09 16:56:52.608 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'listening'
2025-01-09 16:56:52.608 - RealTimeSTT: main - INFO - 📂 Loading typer file...
2025-01-09 16:56:52.608 - RealTimeSTT: main - INFO - 📝 Loading scratchpad files...
2025-01-09 16:56:52.609 - RealTimeSTT: root - DEBUG - Waiting for recording start
2025-01-09 16:56:52.609 - RealTimeSTT: main - INFO - 📝 Loading prompt template...
2025-01-09 16:56:52.609 - RealTimeSTT: main - INFO - 🤖 Processing text with DeepSeek...
2025-01-09 16:56:52.611 - RealTimeSTT: openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '<purpose>\n    Given the available python typer-commands, the scratch-pad and the natural-language-request produce the correct typer CLI command.\n</purpose>\n\n<instructions>\n    <instruction>We only want the CLI command as output. No explanations or additional text. The command will be immediately executed.</instruction>\n    <instruction>Focus on generating a python typer-based command that can be used with a Python script called main.py.</instruction>\n    <instruction>All commands must be fully valid typer commands from the typer-commands file with arguments and flags infered based on the natural-language-request.</instruction>\n    <instruction>Be sure to use - for the function names instead of _ (example: \'hello-world\' instead of \'hello_world\')</instruction>\n    <instruction>Don\'t use = for arguments, use spaces instead (example: \'hello-world --name John\' instead of \'hello-world --name=John\')</instruction>\n    <instruction>If multiple commands are requested chain them together with \'&&\' so they run back to back in the terminal only if the previous command succeeds.</instruction>\n    <instruction>Respond with the command only, we will prefix the correct python and file to it.</instruction>\n    <instruction>If the user asks for a command (or something nonsense) that is not in the typer-commands file, respond with an empty string.</instruction>\n</instructions>\n\n<typer-commands>\nimport typer\nfrom typing import Optional\n\napp = typer.Typer()\n\n\n@app.command()\ndef ping_server(\n    wait: bool = typer.Option(False, "--wait", help="Wait for server response?")\n):\n    """\n    Pings the server, optionally waiting for a response.\n    """\n    pass\n\n\n@app.command()\ndef show_config(\n    verbose: bool = typer.Option(False, "--verbose", help="Show config in detail?")\n):\n    """\n    Shows the current configuration.\n    """\n    pass\n\n\n@app.command()\ndef list_files(\n    path: str = typer.Argument(..., help="Path to list files from"),\n    all_files: bool = typer.Option(False, "--all", help="Include hidden files"),\n):\n    """\n    Lists files in a directory. Optionally show hidden files.\n    """\n    pass\n\n\n@app.command()\ndef create_user(\n    username: str = typer.Argument(..., help="Name of the new user"),\n    role: str = typer.Option("guest", "--role", help="Role for the new user"),\n):\n    """\n    Creates a new user with an optional role.\n    """\n    pass\n\n\n@app.command()\ndef delete_user(\n    user_id: str = typer.Argument(..., help="ID of user to delete"),\n    confirm: bool = typer.Option(False, "--confirm", help="Skip confirmation prompt"),\n):\n    """\n    Deletes a user by ID.\n    """\n    pass\n\n\n@app.command()\ndef generate_report(\n    report_type: str = typer.Argument(..., help="Type of report to generate"),\n    output_file: str = typer.Option("report.json", "--output", help="Output file name"),\n):\n    """\n    Generates a report of a specified type to a given file.\n    """\n    pass\n\n\n@app.command()\ndef backup_data(\n    directory: str = typer.Argument(..., help="Directory to store backups"),\n    full: bool = typer.Option(False, "--full", help="Perform a full backup"),\n):\n    """\n    Back up data to a specified directory, optionally performing a full backup.\n    """\n    pass\n\n\n@app.command()\ndef restore_data(\n    file_path: str = typer.Argument(..., help="File path of backup to restore"),\n    overwrite: bool = typer.Option(\n        False, "--overwrite", help="Overwrite existing data"\n    ),\n):\n    """\n    Restores data from a backup file.\n    """\n    pass\n\n\n@app.command()\ndef summarize_logs(\n    logs_path: str = typer.Argument(..., help="Path to log files"),\n    lines: int = typer.Option(100, "--lines", help="Number of lines to summarize"),\n):\n    """\n    Summarizes log data from a specified path, limiting lines.\n    """\n    pass\n\n\n@app.command()\ndef upload_file(\n    file_path: str = typer.Argument(..., help="Path of file to upload"),\n    destination: str = typer.Option(\n        "remote", "--destination", help="Destination label"\n    ),\n    secure: bool = typer.Option(True, "--secure", help="Use secure upload"),\n):\n    """\n    Uploads a file to a destination, optionally enforcing secure upload.\n    """\n    pass\n\n\n@app.command()\ndef download_file(\n    url: str = typer.Argument(..., help="URL of file to download"),\n    output_path: str = typer.Option(".", "--output", help="Local output path"),\n    retry: int = typer.Option(3, "--retry", help="Number of times to retry"),\n):\n    """\n    Downloads a file from a URL with a specified number of retries.\n    """\n    pass\n\n\n@app.command()\ndef filter_records(\n    source: str = typer.Argument(..., help="Data source to filter"),\n    query: str = typer.Option("", "--query", help="Filtering query string"),\n    limit: int = typer.Option(10, "--limit", help="Limit the number of results"),\n):\n    """\n    Filters records from a data source using a query, limiting the number of results.\n    """\n    pass\n\n\n@app.command()\ndef validate_schema(\n    schema_file: str = typer.Argument(..., help="Path to schema file"),\n    data_file: str = typer.Option("", "--data", help="Path to data file to check"),\n    strict: bool = typer.Option(True, "--strict", help="Enforce strict validation"),\n):\n    """\n    Validates a schema, optionally checking a data file with strict mode.\n    """\n    pass\n\n\n@app.command()\ndef sync_remotes(\n    remote_name: str = typer.Argument(..., help="Name of remote to sync"),\n    force: bool = typer.Option(\n        False, "--force", help="Force syncing without prompting"\n    ),\n):\n    """\n    Syncs with a remote repository, optionally forcing the operation.\n    """\n    pass\n\n\n@app.command()\ndef simulate_run(\n    scenario: str = typer.Argument(..., help="Simulation scenario"),\n    cycles: int = typer.Option(5, "--cycles", help="Number of cycles to simulate"),\n    debug: bool = typer.Option(False, "--debug", help="Show debug output"),\n):\n    """\n    Simulates a scenario for a given number of cycles, optionally showing debug output.\n    """\n    pass\n\n\n@app.command()\ndef compare_files(\n    file_a: str = typer.Argument(..., help="First file to compare"),\n    file_b: str = typer.Argument(..., help="Second file to compare"),\n    diff_only: bool = typer.Option(\n        False, "--diff-only", help="Show only the differences"\n    ),\n):\n    """\n    Compares two files, optionally showing only differences.\n    """\n    pass\n\n\n@app.command()\ndef encrypt_data(\n    input_path: str = typer.Argument(..., help="Path of the file to encrypt"),\n    output_path: str = typer.Option("encrypted.bin", "--output", help="Output file"),\n    algorithm: str = typer.Option("AES", "--algorithm", help="Encryption algorithm"),\n):\n    """\n    Encrypts data using a specified algorithm and writes to an output file.\n    """\n    pass\n\n\n@app.command()\ndef decrypt_data(\n    encrypted_file: str = typer.Argument(..., help="Path to encrypted file"),\n    key: str = typer.Option(..., "--key", help="Decryption key"),\n    output_path: str = typer.Option("decrypted.txt", "--output", help="Output file"),\n):\n    """\n    Decrypts an encrypted file using a key.\n    """\n    pass\n\n\n@app.command()\ndef transform_data(\n    input_file: str = typer.Argument(..., help="File to transform"),\n    output_format: str = typer.Option("json", "--format", help="Output format"),\n    columns: str = typer.Option(\n        None, "--columns", help="Comma-separated columns to extract"\n    ),\n):\n    """\n    Transforms data from a file into a specified format, optionally extracting columns.\n    """\n    pass\n\n\n@app.command()\ndef upload_changes(\n    source_dir: str = typer.Argument(..., help="Directory of changes to upload"),\n    incremental: bool = typer.Option(False, "--incremental", help="Incremental upload"),\n    confirm: bool = typer.Option(False, "--confirm", help="Skip confirmation prompt"),\n):\n    """\n    Uploads changes from a directory, optionally in incremental mode.\n    """\n    pass\n\n\n@app.command()\ndef migrate_database(\n    old_db: str = typer.Argument(..., help="Path to old database"),\n    new_db: str = typer.Option(..., "--new-db", help="Path to new database"),\n    dry_run: bool = typer.Option(\n        False, "--dry-run", help="Perform a trial run without changing data"\n    ),\n):\n    """\n    Migrates data from an old database to a new one, optionally doing a dry run.\n    """\n    pass\n\n\n@app.command()\ndef health_check(\n    service_name: str = typer.Argument(..., help="Service to check"),\n    timeout: int = typer.Option(30, "--timeout", help="Timeout in seconds"),\n    alert: bool = typer.Option(False, "--alert", help="Send alert if check fails"),\n):\n    """\n    Checks the health of a service within a specified timeout, optionally sending alerts.\n    """\n    pass\n\n\n@app.command()\ndef search_logs(\n    keyword: str = typer.Argument(..., help="Keyword to search"),\n    log_file: str = typer.Option("system.log", "--log", help="Log file to search in"),\n    case_sensitive: bool = typer.Option(\n        False, "--case-sensitive", help="Enable case-sensitive search"\n    ),\n):\n    """\n    Searches for a keyword in a log file, optionally using case-sensitive mode.\n    """\n    pass\n\n\n@app.command()\ndef stats_by_date(\n    date: str = typer.Argument(..., help="Date in YYYY-MM-DD to query stats"),\n    show_raw: bool = typer.Option(False, "--show-raw", help="Display raw data"),\n):\n    """\n    Shows statistics for a specific date, optionally displaying raw data.\n    """\n    pass\n\n\n@app.command()\ndef publish_update(\n    version: str = typer.Argument(..., help="Version tag to publish"),\n    channel: str = typer.Option("stable", "--channel", help="Release channel"),\n    note: str = typer.Option("", "--note", help="Release note or description"),\n):\n    """\n    Publishes an update to a specified release channel with optional notes.\n    """\n    pass\n\n\n@app.command()\ndef check_version(\n    local_path: str = typer.Argument(..., help="Local path to check"),\n    remote_url: str = typer.Option("", "--remote", help="Remote URL for comparison"),\n    detailed: bool = typer.Option(\n        False, "--detailed", help="Show detailed version info"\n    ),\n):\n    """\n    Checks the version of a local path against a remote source, optionally showing details.\n    """\n    pass\n\n\n@app.command()\ndef queue_task(\n    task_name: str = typer.Argument(..., help="Name of the task to queue"),\n    priority: int = typer.Option(1, "--priority", help="Priority of the task"),\n    delay: int = typer.Option(\n        0, "--delay", help="Delay in seconds before starting task"\n    ),\n):\n    """\n    Queues a task with a specified priority and optional delay.\n    """\n    pass\n\n\n@app.command()\ndef remove_task(\n    task_id: str = typer.Argument(..., help="ID of the task to remove"),\n    force: bool = typer.Option(False, "--force", help="Remove without confirmation"),\n):\n    """\n    Removes a queued task by ID, optionally forcing removal without confirmation.\n    """\n    pass\n\n\n@app.command()\ndef list_tasks(\n    show_all: bool = typer.Option(\n        False, "--all", help="Show all tasks, including completed"\n    ),\n    sort_by: str = typer.Option(\n        "priority", "--sort-by", help="Sort tasks by this field"\n    ),\n):\n    """\n    Lists tasks, optionally including completed tasks or sorting by a different field.\n    """\n    pass\n\n\n@app.command()\ndef inspect_task(\n    task_id: str = typer.Argument(..., help="ID of the task to inspect"),\n    json_output: bool = typer.Option(\n        False, "--json", help="Show output in JSON format"\n    ),\n):\n    """\n    Inspects a specific task by ID, optionally in JSON format.\n    """\n    pass\n\n</typer-commands>\n\n<scratch-pad>\n\t<scratchpad name="scratchpad.txt">\nsource_dir: /Users/idd/code/src/, incremental: true, confirm: true\n\nold_db: /Users/idd/code/src/db/old.db\n</scratchpad>\n\n\n</scratch-pad>\n\n<natural-language-request>\nForce sink remote from our topical branch.\n</natural-language-request>'}, {'role': 'assistant', 'content': 'python commands/template.py', 'prefix': True}], 'model': 'deepseek-chat'}}
2025-01-09 16:56:52.611 - RealTimeSTT: openai._base_client - DEBUG - Sending HTTP Request: POST https://api.deepseek.com/beta/chat/completions
2025-01-09 16:56:52.611 - RealTimeSTT: httpcore.connection - DEBUG - close.started
2025-01-09 16:56:52.612 - RealTimeSTT: httpcore.connection - DEBUG - close.complete
2025-01-09 16:56:52.612 - RealTimeSTT: httpcore.connection - DEBUG - connect_tcp.started host='api.deepseek.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-01-09 16:56:53.059 - RealTimeSTT: httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x30ee3c7d0>
2025-01-09 16:56:53.059 - RealTimeSTT: httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x30ed5cfd0> server_hostname='api.deepseek.com' timeout=5.0
2025-01-09 16:56:53.094 - RealTimeSTT: httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x30ee3c4a0>
2025-01-09 16:56:53.094 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-09 16:56:53.094 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_headers.complete
2025-01-09 16:56:53.094 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-09 16:56:53.094 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_body.complete
2025-01-09 16:56:53.094 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-09 16:56:54.778 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 09 Jan 2025 22:56:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'vary', b'origin, access-control-request-method, access-control-request-headers'), (b'access-control-allow-credentials', b'true'), (b'x-ds-trace-id', b'81ec3b3d909a5907377a41f85dbbe93a'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'x-content-type-options', b'nosniff'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8ff805ebef83125f-ORD'), (b'Content-Encoding', b'gzip')])
2025-01-09 16:56:54.780 - RealTimeSTT: httpx - INFO - HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
2025-01-09 16:56:54.780 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-09 16:56:54.781 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_body.complete
2025-01-09 16:56:54.781 - RealTimeSTT: httpcore.http11 - DEBUG - response_closed.started
2025-01-09 16:56:54.781 - RealTimeSTT: httpcore.http11 - DEBUG - response_closed.complete
2025-01-09 16:56:54.781 - RealTimeSTT: openai._base_client - DEBUG - HTTP Response: POST https://api.deepseek.com/beta/chat/completions "200 OK" Headers({'date': 'Thu, 09 Jan 2025 22:56:54 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'vary': 'origin, access-control-request-method, access-control-request-headers', 'access-control-allow-credentials': 'true', 'x-ds-trace-id': '81ec3b3d909a5907377a41f85dbbe93a', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8ff805ebef83125f-ORD', 'content-encoding': 'gzip'})
2025-01-09 16:56:54.782 - RealTimeSTT: openai._base_client - DEBUG - request_id: None
2025-01-09 16:56:54.783 - RealTimeSTT: main - INFO - ⚡ Executing command: `python commands/template.py sync-remotes topical --force`
2025-01-09 16:56:54.908 - RealTimeSTT: main - INFO - ✅ Command execution completed successfully
2025-01-09 16:56:54.908 - RealTimeSTT: main - INFO - 📄 Output:

2025-01-09 16:57:14.032 - RealTimeSTT: root - INFO - voice activity detected
2025-01-09 16:57:14.033 - RealTimeSTT: root - INFO - recording started
2025-01-09 16:57:14.033 - RealTimeSTT: root - INFO - State changed from 'listening' to 'recording'
2025-01-09 16:57:14.033 - RealTimeSTT: root - DEBUG - Waiting for recording stop
2025-01-09 16:57:17.486 - RealTimeSTT: root - INFO - recording stopped
2025-01-09 16:57:17.487 - RealTimeSTT: root - INFO - State changed from 'recording' to 'inactive'
2025-01-09 16:57:17.500 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'transcribing'
2025-01-09 16:57:17.502 - RealTimeSTT: root - DEBUG - Adding transcription request, no early transcription started
2025-01-09 16:57:17.510 - RealTimeSTT: root - DEBUG - Receive from parent_transcription_pipe after sendiung transcription request, transcribe_count: 1
2025-01-09 16:57:17.550 - RealTimeSTT: root - INFO - State changed from 'transcribing' to 'inactive'
2025-01-09 16:57:18.003 - RealTimeSTT: root - DEBUG - Model tiny completed transcription in 0.50 seconds
2025-01-09 16:57:18.003 - RealTimeSTT: root - INFO - Setting listen time
2025-01-09 16:57:18.003 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'listening'
2025-01-09 16:57:18.003 - RealTimeSTT: main - INFO - 📂 Loading typer file...
2025-01-09 16:57:18.003 - RealTimeSTT: root - DEBUG - Waiting for recording start
2025-01-09 16:57:18.003 - RealTimeSTT: main - INFO - 📝 Loading scratchpad files...
2025-01-09 16:57:18.004 - RealTimeSTT: main - INFO - 📝 Loading prompt template...
2025-01-09 16:57:18.004 - RealTimeSTT: main - INFO - 🤖 Processing text with DeepSeek...
2025-01-09 16:57:18.005 - RealTimeSTT: openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '<purpose>\n    Given the available python typer-commands, the scratch-pad and the natural-language-request produce the correct typer CLI command.\n</purpose>\n\n<instructions>\n    <instruction>We only want the CLI command as output. No explanations or additional text. The command will be immediately executed.</instruction>\n    <instruction>Focus on generating a python typer-based command that can be used with a Python script called main.py.</instruction>\n    <instruction>All commands must be fully valid typer commands from the typer-commands file with arguments and flags infered based on the natural-language-request.</instruction>\n    <instruction>Be sure to use - for the function names instead of _ (example: \'hello-world\' instead of \'hello_world\')</instruction>\n    <instruction>Don\'t use = for arguments, use spaces instead (example: \'hello-world --name John\' instead of \'hello-world --name=John\')</instruction>\n    <instruction>If multiple commands are requested chain them together with \'&&\' so they run back to back in the terminal only if the previous command succeeds.</instruction>\n    <instruction>Respond with the command only, we will prefix the correct python and file to it.</instruction>\n    <instruction>If the user asks for a command (or something nonsense) that is not in the typer-commands file, respond with an empty string.</instruction>\n</instructions>\n\n<typer-commands>\nimport typer\nfrom typing import Optional\n\napp = typer.Typer()\n\n\n@app.command()\ndef ping_server(\n    wait: bool = typer.Option(False, "--wait", help="Wait for server response?")\n):\n    """\n    Pings the server, optionally waiting for a response.\n    """\n    pass\n\n\n@app.command()\ndef show_config(\n    verbose: bool = typer.Option(False, "--verbose", help="Show config in detail?")\n):\n    """\n    Shows the current configuration.\n    """\n    pass\n\n\n@app.command()\ndef list_files(\n    path: str = typer.Argument(..., help="Path to list files from"),\n    all_files: bool = typer.Option(False, "--all", help="Include hidden files"),\n):\n    """\n    Lists files in a directory. Optionally show hidden files.\n    """\n    pass\n\n\n@app.command()\ndef create_user(\n    username: str = typer.Argument(..., help="Name of the new user"),\n    role: str = typer.Option("guest", "--role", help="Role for the new user"),\n):\n    """\n    Creates a new user with an optional role.\n    """\n    pass\n\n\n@app.command()\ndef delete_user(\n    user_id: str = typer.Argument(..., help="ID of user to delete"),\n    confirm: bool = typer.Option(False, "--confirm", help="Skip confirmation prompt"),\n):\n    """\n    Deletes a user by ID.\n    """\n    pass\n\n\n@app.command()\ndef generate_report(\n    report_type: str = typer.Argument(..., help="Type of report to generate"),\n    output_file: str = typer.Option("report.json", "--output", help="Output file name"),\n):\n    """\n    Generates a report of a specified type to a given file.\n    """\n    pass\n\n\n@app.command()\ndef backup_data(\n    directory: str = typer.Argument(..., help="Directory to store backups"),\n    full: bool = typer.Option(False, "--full", help="Perform a full backup"),\n):\n    """\n    Back up data to a specified directory, optionally performing a full backup.\n    """\n    pass\n\n\n@app.command()\ndef restore_data(\n    file_path: str = typer.Argument(..., help="File path of backup to restore"),\n    overwrite: bool = typer.Option(\n        False, "--overwrite", help="Overwrite existing data"\n    ),\n):\n    """\n    Restores data from a backup file.\n    """\n    pass\n\n\n@app.command()\ndef summarize_logs(\n    logs_path: str = typer.Argument(..., help="Path to log files"),\n    lines: int = typer.Option(100, "--lines", help="Number of lines to summarize"),\n):\n    """\n    Summarizes log data from a specified path, limiting lines.\n    """\n    pass\n\n\n@app.command()\ndef upload_file(\n    file_path: str = typer.Argument(..., help="Path of file to upload"),\n    destination: str = typer.Option(\n        "remote", "--destination", help="Destination label"\n    ),\n    secure: bool = typer.Option(True, "--secure", help="Use secure upload"),\n):\n    """\n    Uploads a file to a destination, optionally enforcing secure upload.\n    """\n    pass\n\n\n@app.command()\ndef download_file(\n    url: str = typer.Argument(..., help="URL of file to download"),\n    output_path: str = typer.Option(".", "--output", help="Local output path"),\n    retry: int = typer.Option(3, "--retry", help="Number of times to retry"),\n):\n    """\n    Downloads a file from a URL with a specified number of retries.\n    """\n    pass\n\n\n@app.command()\ndef filter_records(\n    source: str = typer.Argument(..., help="Data source to filter"),\n    query: str = typer.Option("", "--query", help="Filtering query string"),\n    limit: int = typer.Option(10, "--limit", help="Limit the number of results"),\n):\n    """\n    Filters records from a data source using a query, limiting the number of results.\n    """\n    pass\n\n\n@app.command()\ndef validate_schema(\n    schema_file: str = typer.Argument(..., help="Path to schema file"),\n    data_file: str = typer.Option("", "--data", help="Path to data file to check"),\n    strict: bool = typer.Option(True, "--strict", help="Enforce strict validation"),\n):\n    """\n    Validates a schema, optionally checking a data file with strict mode.\n    """\n    pass\n\n\n@app.command()\ndef sync_remotes(\n    remote_name: str = typer.Argument(..., help="Name of remote to sync"),\n    force: bool = typer.Option(\n        False, "--force", help="Force syncing without prompting"\n    ),\n):\n    """\n    Syncs with a remote repository, optionally forcing the operation.\n    """\n    pass\n\n\n@app.command()\ndef simulate_run(\n    scenario: str = typer.Argument(..., help="Simulation scenario"),\n    cycles: int = typer.Option(5, "--cycles", help="Number of cycles to simulate"),\n    debug: bool = typer.Option(False, "--debug", help="Show debug output"),\n):\n    """\n    Simulates a scenario for a given number of cycles, optionally showing debug output.\n    """\n    pass\n\n\n@app.command()\ndef compare_files(\n    file_a: str = typer.Argument(..., help="First file to compare"),\n    file_b: str = typer.Argument(..., help="Second file to compare"),\n    diff_only: bool = typer.Option(\n        False, "--diff-only", help="Show only the differences"\n    ),\n):\n    """\n    Compares two files, optionally showing only differences.\n    """\n    pass\n\n\n@app.command()\ndef encrypt_data(\n    input_path: str = typer.Argument(..., help="Path of the file to encrypt"),\n    output_path: str = typer.Option("encrypted.bin", "--output", help="Output file"),\n    algorithm: str = typer.Option("AES", "--algorithm", help="Encryption algorithm"),\n):\n    """\n    Encrypts data using a specified algorithm and writes to an output file.\n    """\n    pass\n\n\n@app.command()\ndef decrypt_data(\n    encrypted_file: str = typer.Argument(..., help="Path to encrypted file"),\n    key: str = typer.Option(..., "--key", help="Decryption key"),\n    output_path: str = typer.Option("decrypted.txt", "--output", help="Output file"),\n):\n    """\n    Decrypts an encrypted file using a key.\n    """\n    pass\n\n\n@app.command()\ndef transform_data(\n    input_file: str = typer.Argument(..., help="File to transform"),\n    output_format: str = typer.Option("json", "--format", help="Output format"),\n    columns: str = typer.Option(\n        None, "--columns", help="Comma-separated columns to extract"\n    ),\n):\n    """\n    Transforms data from a file into a specified format, optionally extracting columns.\n    """\n    pass\n\n\n@app.command()\ndef upload_changes(\n    source_dir: str = typer.Argument(..., help="Directory of changes to upload"),\n    incremental: bool = typer.Option(False, "--incremental", help="Incremental upload"),\n    confirm: bool = typer.Option(False, "--confirm", help="Skip confirmation prompt"),\n):\n    """\n    Uploads changes from a directory, optionally in incremental mode.\n    """\n    pass\n\n\n@app.command()\ndef migrate_database(\n    old_db: str = typer.Argument(..., help="Path to old database"),\n    new_db: str = typer.Option(..., "--new-db", help="Path to new database"),\n    dry_run: bool = typer.Option(\n        False, "--dry-run", help="Perform a trial run without changing data"\n    ),\n):\n    """\n    Migrates data from an old database to a new one, optionally doing a dry run.\n    """\n    pass\n\n\n@app.command()\ndef health_check(\n    service_name: str = typer.Argument(..., help="Service to check"),\n    timeout: int = typer.Option(30, "--timeout", help="Timeout in seconds"),\n    alert: bool = typer.Option(False, "--alert", help="Send alert if check fails"),\n):\n    """\n    Checks the health of a service within a specified timeout, optionally sending alerts.\n    """\n    pass\n\n\n@app.command()\ndef search_logs(\n    keyword: str = typer.Argument(..., help="Keyword to search"),\n    log_file: str = typer.Option("system.log", "--log", help="Log file to search in"),\n    case_sensitive: bool = typer.Option(\n        False, "--case-sensitive", help="Enable case-sensitive search"\n    ),\n):\n    """\n    Searches for a keyword in a log file, optionally using case-sensitive mode.\n    """\n    pass\n\n\n@app.command()\ndef stats_by_date(\n    date: str = typer.Argument(..., help="Date in YYYY-MM-DD to query stats"),\n    show_raw: bool = typer.Option(False, "--show-raw", help="Display raw data"),\n):\n    """\n    Shows statistics for a specific date, optionally displaying raw data.\n    """\n    pass\n\n\n@app.command()\ndef publish_update(\n    version: str = typer.Argument(..., help="Version tag to publish"),\n    channel: str = typer.Option("stable", "--channel", help="Release channel"),\n    note: str = typer.Option("", "--note", help="Release note or description"),\n):\n    """\n    Publishes an update to a specified release channel with optional notes.\n    """\n    pass\n\n\n@app.command()\ndef check_version(\n    local_path: str = typer.Argument(..., help="Local path to check"),\n    remote_url: str = typer.Option("", "--remote", help="Remote URL for comparison"),\n    detailed: bool = typer.Option(\n        False, "--detailed", help="Show detailed version info"\n    ),\n):\n    """\n    Checks the version of a local path against a remote source, optionally showing details.\n    """\n    pass\n\n\n@app.command()\ndef queue_task(\n    task_name: str = typer.Argument(..., help="Name of the task to queue"),\n    priority: int = typer.Option(1, "--priority", help="Priority of the task"),\n    delay: int = typer.Option(\n        0, "--delay", help="Delay in seconds before starting task"\n    ),\n):\n    """\n    Queues a task with a specified priority and optional delay.\n    """\n    pass\n\n\n@app.command()\ndef remove_task(\n    task_id: str = typer.Argument(..., help="ID of the task to remove"),\n    force: bool = typer.Option(False, "--force", help="Remove without confirmation"),\n):\n    """\n    Removes a queued task by ID, optionally forcing removal without confirmation.\n    """\n    pass\n\n\n@app.command()\ndef list_tasks(\n    show_all: bool = typer.Option(\n        False, "--all", help="Show all tasks, including completed"\n    ),\n    sort_by: str = typer.Option(\n        "priority", "--sort-by", help="Sort tasks by this field"\n    ),\n):\n    """\n    Lists tasks, optionally including completed tasks or sorting by a different field.\n    """\n    pass\n\n\n@app.command()\ndef inspect_task(\n    task_id: str = typer.Argument(..., help="ID of the task to inspect"),\n    json_output: bool = typer.Option(\n        False, "--json", help="Show output in JSON format"\n    ),\n):\n    """\n    Inspects a specific task by ID, optionally in JSON format.\n    """\n    pass\n\n</typer-commands>\n\n<scratch-pad>\n\t<scratchpad name="scratchpad.txt">\nsource_dir: /Users/idd/code/src/, incremental: true, confirm: true\n\nold_db: /Users/idd/code/src/db/old.db\n</scratchpad>\n\n\n</scratch-pad>\n\n<natural-language-request>\nTo leave user 1, 2, 3, 4, 5, confirm.\n</natural-language-request>'}, {'role': 'assistant', 'content': 'python commands/template.py', 'prefix': True}], 'model': 'deepseek-chat'}}
2025-01-09 16:57:18.006 - RealTimeSTT: openai._base_client - DEBUG - Sending HTTP Request: POST https://api.deepseek.com/beta/chat/completions
2025-01-09 16:57:18.006 - RealTimeSTT: httpcore.connection - DEBUG - close.started
2025-01-09 16:57:18.006 - RealTimeSTT: httpcore.connection - DEBUG - close.complete
2025-01-09 16:57:18.006 - RealTimeSTT: httpcore.connection - DEBUG - connect_tcp.started host='api.deepseek.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-01-09 16:57:18.031 - RealTimeSTT: httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x30ee486b0>
2025-01-09 16:57:18.031 - RealTimeSTT: httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x30ed5cfd0> server_hostname='api.deepseek.com' timeout=5.0
2025-01-09 16:57:18.057 - RealTimeSTT: httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x30ee48320>
2025-01-09 16:57:18.057 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-09 16:57:18.057 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_headers.complete
2025-01-09 16:57:18.057 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-09 16:57:18.057 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_body.complete
2025-01-09 16:57:18.057 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-09 16:57:19.968 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 09 Jan 2025 22:57:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'vary', b'origin, access-control-request-method, access-control-request-headers'), (b'access-control-allow-credentials', b'true'), (b'x-ds-trace-id', b'd5fca51d09d7772536ffcec1007ff126'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'x-content-type-options', b'nosniff'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8ff80687feca024e-ORD'), (b'Content-Encoding', b'gzip')])
2025-01-09 16:57:19.969 - RealTimeSTT: httpx - INFO - HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
2025-01-09 16:57:19.969 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-09 16:57:19.970 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_body.complete
2025-01-09 16:57:19.970 - RealTimeSTT: httpcore.http11 - DEBUG - response_closed.started
2025-01-09 16:57:19.970 - RealTimeSTT: httpcore.http11 - DEBUG - response_closed.complete
2025-01-09 16:57:19.970 - RealTimeSTT: openai._base_client - DEBUG - HTTP Response: POST https://api.deepseek.com/beta/chat/completions "200 OK" Headers({'date': 'Thu, 09 Jan 2025 22:57:19 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'vary': 'origin, access-control-request-method, access-control-request-headers', 'access-control-allow-credentials': 'true', 'x-ds-trace-id': 'd5fca51d09d7772536ffcec1007ff126', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8ff80687feca024e-ORD', 'content-encoding': 'gzip'})
2025-01-09 16:57:19.970 - RealTimeSTT: openai._base_client - DEBUG - request_id: None
2025-01-09 16:57:19.972 - RealTimeSTT: main - INFO - ⚡ Executing command: `python commands/template.py delete-user 1 --confirm && delete-user 2 --confirm && delete-user 3 --confirm && delete-user 4 --confirm && delete-user 5 --confirm`
2025-01-09 16:57:20.097 - RealTimeSTT: main - INFO - ✅ Command execution completed successfully
2025-01-09 16:57:20.097 - RealTimeSTT: main - INFO - 📄 Output:

2025-01-09 16:57:27.342 - RealTimeSTT: root - INFO - voice activity detected
2025-01-09 16:57:27.343 - RealTimeSTT: root - INFO - recording started
2025-01-09 16:57:27.343 - RealTimeSTT: root - INFO - State changed from 'listening' to 'recording'
2025-01-09 16:57:27.343 - RealTimeSTT: root - DEBUG - Waiting for recording stop
2025-01-09 16:57:31.886 - RealTimeSTT: root - INFO - recording stopped
2025-01-09 16:57:31.887 - RealTimeSTT: root - INFO - State changed from 'recording' to 'inactive'
2025-01-09 16:57:31.935 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'transcribing'
2025-01-09 16:57:31.938 - RealTimeSTT: root - DEBUG - Adding transcription request, no early transcription started
2025-01-09 16:57:31.954 - RealTimeSTT: root - INFO - State changed from 'transcribing' to 'inactive'
2025-01-09 16:57:31.958 - RealTimeSTT: root - DEBUG - Receive from parent_transcription_pipe after sendiung transcription request, transcribe_count: 1
2025-01-09 16:57:32.420 - RealTimeSTT: root - DEBUG - Model tiny completed transcription in 0.48 seconds
2025-01-09 16:57:32.420 - RealTimeSTT: root - INFO - Setting listen time
2025-01-09 16:57:32.421 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'listening'
2025-01-09 16:57:32.421 - RealTimeSTT: main - INFO - 📂 Loading typer file...
2025-01-09 16:57:32.421 - RealTimeSTT: root - DEBUG - Waiting for recording start
2025-01-09 16:57:32.421 - RealTimeSTT: main - INFO - 📝 Loading scratchpad files...
2025-01-09 16:57:32.421 - RealTimeSTT: main - INFO - 📝 Loading prompt template...
2025-01-09 16:57:32.421 - RealTimeSTT: main - INFO - 🤖 Processing text with DeepSeek...
2025-01-09 16:57:32.423 - RealTimeSTT: openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '<purpose>\n    Given the available python typer-commands, the scratch-pad and the natural-language-request produce the correct typer CLI command.\n</purpose>\n\n<instructions>\n    <instruction>We only want the CLI command as output. No explanations or additional text. The command will be immediately executed.</instruction>\n    <instruction>Focus on generating a python typer-based command that can be used with a Python script called main.py.</instruction>\n    <instruction>All commands must be fully valid typer commands from the typer-commands file with arguments and flags infered based on the natural-language-request.</instruction>\n    <instruction>Be sure to use - for the function names instead of _ (example: \'hello-world\' instead of \'hello_world\')</instruction>\n    <instruction>Don\'t use = for arguments, use spaces instead (example: \'hello-world --name John\' instead of \'hello-world --name=John\')</instruction>\n    <instruction>If multiple commands are requested chain them together with \'&&\' so they run back to back in the terminal only if the previous command succeeds.</instruction>\n    <instruction>Respond with the command only, we will prefix the correct python and file to it.</instruction>\n    <instruction>If the user asks for a command (or something nonsense) that is not in the typer-commands file, respond with an empty string.</instruction>\n</instructions>\n\n<typer-commands>\nimport typer\nfrom typing import Optional\n\napp = typer.Typer()\n\n\n@app.command()\ndef ping_server(\n    wait: bool = typer.Option(False, "--wait", help="Wait for server response?")\n):\n    """\n    Pings the server, optionally waiting for a response.\n    """\n    pass\n\n\n@app.command()\ndef show_config(\n    verbose: bool = typer.Option(False, "--verbose", help="Show config in detail?")\n):\n    """\n    Shows the current configuration.\n    """\n    pass\n\n\n@app.command()\ndef list_files(\n    path: str = typer.Argument(..., help="Path to list files from"),\n    all_files: bool = typer.Option(False, "--all", help="Include hidden files"),\n):\n    """\n    Lists files in a directory. Optionally show hidden files.\n    """\n    pass\n\n\n@app.command()\ndef create_user(\n    username: str = typer.Argument(..., help="Name of the new user"),\n    role: str = typer.Option("guest", "--role", help="Role for the new user"),\n):\n    """\n    Creates a new user with an optional role.\n    """\n    pass\n\n\n@app.command()\ndef delete_user(\n    user_id: str = typer.Argument(..., help="ID of user to delete"),\n    confirm: bool = typer.Option(False, "--confirm", help="Skip confirmation prompt"),\n):\n    """\n    Deletes a user by ID.\n    """\n    pass\n\n\n@app.command()\ndef generate_report(\n    report_type: str = typer.Argument(..., help="Type of report to generate"),\n    output_file: str = typer.Option("report.json", "--output", help="Output file name"),\n):\n    """\n    Generates a report of a specified type to a given file.\n    """\n    pass\n\n\n@app.command()\ndef backup_data(\n    directory: str = typer.Argument(..., help="Directory to store backups"),\n    full: bool = typer.Option(False, "--full", help="Perform a full backup"),\n):\n    """\n    Back up data to a specified directory, optionally performing a full backup.\n    """\n    pass\n\n\n@app.command()\ndef restore_data(\n    file_path: str = typer.Argument(..., help="File path of backup to restore"),\n    overwrite: bool = typer.Option(\n        False, "--overwrite", help="Overwrite existing data"\n    ),\n):\n    """\n    Restores data from a backup file.\n    """\n    pass\n\n\n@app.command()\ndef summarize_logs(\n    logs_path: str = typer.Argument(..., help="Path to log files"),\n    lines: int = typer.Option(100, "--lines", help="Number of lines to summarize"),\n):\n    """\n    Summarizes log data from a specified path, limiting lines.\n    """\n    pass\n\n\n@app.command()\ndef upload_file(\n    file_path: str = typer.Argument(..., help="Path of file to upload"),\n    destination: str = typer.Option(\n        "remote", "--destination", help="Destination label"\n    ),\n    secure: bool = typer.Option(True, "--secure", help="Use secure upload"),\n):\n    """\n    Uploads a file to a destination, optionally enforcing secure upload.\n    """\n    pass\n\n\n@app.command()\ndef download_file(\n    url: str = typer.Argument(..., help="URL of file to download"),\n    output_path: str = typer.Option(".", "--output", help="Local output path"),\n    retry: int = typer.Option(3, "--retry", help="Number of times to retry"),\n):\n    """\n    Downloads a file from a URL with a specified number of retries.\n    """\n    pass\n\n\n@app.command()\ndef filter_records(\n    source: str = typer.Argument(..., help="Data source to filter"),\n    query: str = typer.Option("", "--query", help="Filtering query string"),\n    limit: int = typer.Option(10, "--limit", help="Limit the number of results"),\n):\n    """\n    Filters records from a data source using a query, limiting the number of results.\n    """\n    pass\n\n\n@app.command()\ndef validate_schema(\n    schema_file: str = typer.Argument(..., help="Path to schema file"),\n    data_file: str = typer.Option("", "--data", help="Path to data file to check"),\n    strict: bool = typer.Option(True, "--strict", help="Enforce strict validation"),\n):\n    """\n    Validates a schema, optionally checking a data file with strict mode.\n    """\n    pass\n\n\n@app.command()\ndef sync_remotes(\n    remote_name: str = typer.Argument(..., help="Name of remote to sync"),\n    force: bool = typer.Option(\n        False, "--force", help="Force syncing without prompting"\n    ),\n):\n    """\n    Syncs with a remote repository, optionally forcing the operation.\n    """\n    pass\n\n\n@app.command()\ndef simulate_run(\n    scenario: str = typer.Argument(..., help="Simulation scenario"),\n    cycles: int = typer.Option(5, "--cycles", help="Number of cycles to simulate"),\n    debug: bool = typer.Option(False, "--debug", help="Show debug output"),\n):\n    """\n    Simulates a scenario for a given number of cycles, optionally showing debug output.\n    """\n    pass\n\n\n@app.command()\ndef compare_files(\n    file_a: str = typer.Argument(..., help="First file to compare"),\n    file_b: str = typer.Argument(..., help="Second file to compare"),\n    diff_only: bool = typer.Option(\n        False, "--diff-only", help="Show only the differences"\n    ),\n):\n    """\n    Compares two files, optionally showing only differences.\n    """\n    pass\n\n\n@app.command()\ndef encrypt_data(\n    input_path: str = typer.Argument(..., help="Path of the file to encrypt"),\n    output_path: str = typer.Option("encrypted.bin", "--output", help="Output file"),\n    algorithm: str = typer.Option("AES", "--algorithm", help="Encryption algorithm"),\n):\n    """\n    Encrypts data using a specified algorithm and writes to an output file.\n    """\n    pass\n\n\n@app.command()\ndef decrypt_data(\n    encrypted_file: str = typer.Argument(..., help="Path to encrypted file"),\n    key: str = typer.Option(..., "--key", help="Decryption key"),\n    output_path: str = typer.Option("decrypted.txt", "--output", help="Output file"),\n):\n    """\n    Decrypts an encrypted file using a key.\n    """\n    pass\n\n\n@app.command()\ndef transform_data(\n    input_file: str = typer.Argument(..., help="File to transform"),\n    output_format: str = typer.Option("json", "--format", help="Output format"),\n    columns: str = typer.Option(\n        None, "--columns", help="Comma-separated columns to extract"\n    ),\n):\n    """\n    Transforms data from a file into a specified format, optionally extracting columns.\n    """\n    pass\n\n\n@app.command()\ndef upload_changes(\n    source_dir: str = typer.Argument(..., help="Directory of changes to upload"),\n    incremental: bool = typer.Option(False, "--incremental", help="Incremental upload"),\n    confirm: bool = typer.Option(False, "--confirm", help="Skip confirmation prompt"),\n):\n    """\n    Uploads changes from a directory, optionally in incremental mode.\n    """\n    pass\n\n\n@app.command()\ndef migrate_database(\n    old_db: str = typer.Argument(..., help="Path to old database"),\n    new_db: str = typer.Option(..., "--new-db", help="Path to new database"),\n    dry_run: bool = typer.Option(\n        False, "--dry-run", help="Perform a trial run without changing data"\n    ),\n):\n    """\n    Migrates data from an old database to a new one, optionally doing a dry run.\n    """\n    pass\n\n\n@app.command()\ndef health_check(\n    service_name: str = typer.Argument(..., help="Service to check"),\n    timeout: int = typer.Option(30, "--timeout", help="Timeout in seconds"),\n    alert: bool = typer.Option(False, "--alert", help="Send alert if check fails"),\n):\n    """\n    Checks the health of a service within a specified timeout, optionally sending alerts.\n    """\n    pass\n\n\n@app.command()\ndef search_logs(\n    keyword: str = typer.Argument(..., help="Keyword to search"),\n    log_file: str = typer.Option("system.log", "--log", help="Log file to search in"),\n    case_sensitive: bool = typer.Option(\n        False, "--case-sensitive", help="Enable case-sensitive search"\n    ),\n):\n    """\n    Searches for a keyword in a log file, optionally using case-sensitive mode.\n    """\n    pass\n\n\n@app.command()\ndef stats_by_date(\n    date: str = typer.Argument(..., help="Date in YYYY-MM-DD to query stats"),\n    show_raw: bool = typer.Option(False, "--show-raw", help="Display raw data"),\n):\n    """\n    Shows statistics for a specific date, optionally displaying raw data.\n    """\n    pass\n\n\n@app.command()\ndef publish_update(\n    version: str = typer.Argument(..., help="Version tag to publish"),\n    channel: str = typer.Option("stable", "--channel", help="Release channel"),\n    note: str = typer.Option("", "--note", help="Release note or description"),\n):\n    """\n    Publishes an update to a specified release channel with optional notes.\n    """\n    pass\n\n\n@app.command()\ndef check_version(\n    local_path: str = typer.Argument(..., help="Local path to check"),\n    remote_url: str = typer.Option("", "--remote", help="Remote URL for comparison"),\n    detailed: bool = typer.Option(\n        False, "--detailed", help="Show detailed version info"\n    ),\n):\n    """\n    Checks the version of a local path against a remote source, optionally showing details.\n    """\n    pass\n\n\n@app.command()\ndef queue_task(\n    task_name: str = typer.Argument(..., help="Name of the task to queue"),\n    priority: int = typer.Option(1, "--priority", help="Priority of the task"),\n    delay: int = typer.Option(\n        0, "--delay", help="Delay in seconds before starting task"\n    ),\n):\n    """\n    Queues a task with a specified priority and optional delay.\n    """\n    pass\n\n\n@app.command()\ndef remove_task(\n    task_id: str = typer.Argument(..., help="ID of the task to remove"),\n    force: bool = typer.Option(False, "--force", help="Remove without confirmation"),\n):\n    """\n    Removes a queued task by ID, optionally forcing removal without confirmation.\n    """\n    pass\n\n\n@app.command()\ndef list_tasks(\n    show_all: bool = typer.Option(\n        False, "--all", help="Show all tasks, including completed"\n    ),\n    sort_by: str = typer.Option(\n        "priority", "--sort-by", help="Sort tasks by this field"\n    ),\n):\n    """\n    Lists tasks, optionally including completed tasks or sorting by a different field.\n    """\n    pass\n\n\n@app.command()\ndef inspect_task(\n    task_id: str = typer.Argument(..., help="ID of the task to inspect"),\n    json_output: bool = typer.Option(\n        False, "--json", help="Show output in JSON format"\n    ),\n):\n    """\n    Inspects a specific task by ID, optionally in JSON format.\n    """\n    pass\n\n</typer-commands>\n\n<scratch-pad>\n\t<scratchpad name="scratchpad.txt">\nsource_dir: /Users/idd/code/src/, incremental: true, confirm: true\n\nold_db: /Users/idd/code/src/db/old.db\n</scratchpad>\n\n\n</scratch-pad>\n\n<natural-language-request>\nIn a single command run delete user 12345.\n</natural-language-request>'}, {'role': 'assistant', 'content': 'python commands/template.py', 'prefix': True}], 'model': 'deepseek-chat'}}
2025-01-09 16:57:32.423 - RealTimeSTT: openai._base_client - DEBUG - Sending HTTP Request: POST https://api.deepseek.com/beta/chat/completions
2025-01-09 16:57:32.423 - RealTimeSTT: httpcore.connection - DEBUG - close.started
2025-01-09 16:57:32.424 - RealTimeSTT: httpcore.connection - DEBUG - close.complete
2025-01-09 16:57:32.424 - RealTimeSTT: httpcore.connection - DEBUG - connect_tcp.started host='api.deepseek.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-01-09 16:57:32.453 - RealTimeSTT: httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x30ee48860>
2025-01-09 16:57:32.453 - RealTimeSTT: httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x30ed5cfd0> server_hostname='api.deepseek.com' timeout=5.0
2025-01-09 16:57:32.486 - RealTimeSTT: httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x30ee49700>
2025-01-09 16:57:32.486 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-09 16:57:32.486 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_headers.complete
2025-01-09 16:57:32.486 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-09 16:57:32.487 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_body.complete
2025-01-09 16:57:32.487 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-09 16:57:32.527 - RealTimeSTT: root - INFO - voice activity detected
2025-01-09 16:57:32.527 - RealTimeSTT: root - INFO - recording started
2025-01-09 16:57:32.527 - RealTimeSTT: root - INFO - State changed from 'listening' to 'recording'
2025-01-09 16:57:32.527 - RealTimeSTT: root - DEBUG - Waiting for recording stop
2025-01-09 16:57:33.683 - RealTimeSTT: root - INFO - recording stopped
2025-01-09 16:57:33.683 - RealTimeSTT: root - INFO - State changed from 'recording' to 'inactive'
2025-01-09 16:57:33.720 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'transcribing'
2025-01-09 16:57:33.721 - RealTimeSTT: root - DEBUG - Adding transcription request, no early transcription started
2025-01-09 16:57:33.722 - RealTimeSTT: root - DEBUG - Receive from parent_transcription_pipe after sendiung transcription request, transcribe_count: 1
2025-01-09 16:57:33.743 - RealTimeSTT: root - INFO - State changed from 'transcribing' to 'inactive'
2025-01-09 16:57:33.995 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 09 Jan 2025 22:57:33 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'vary', b'origin, access-control-request-method, access-control-request-headers'), (b'access-control-allow-credentials', b'true'), (b'x-ds-trace-id', b'361c01c57a964c9bfc2ae6d6d40f9d68'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'x-content-type-options', b'nosniff'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8ff806e22922222b-ORD'), (b'Content-Encoding', b'gzip')])
2025-01-09 16:57:33.996 - RealTimeSTT: httpx - INFO - HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
2025-01-09 16:57:33.996 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-09 16:57:33.996 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_body.complete
2025-01-09 16:57:33.996 - RealTimeSTT: httpcore.http11 - DEBUG - response_closed.started
2025-01-09 16:57:33.996 - RealTimeSTT: httpcore.http11 - DEBUG - response_closed.complete
2025-01-09 16:57:33.996 - RealTimeSTT: openai._base_client - DEBUG - HTTP Response: POST https://api.deepseek.com/beta/chat/completions "200 OK" Headers({'date': 'Thu, 09 Jan 2025 22:57:33 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'vary': 'origin, access-control-request-method, access-control-request-headers', 'access-control-allow-credentials': 'true', 'x-ds-trace-id': '361c01c57a964c9bfc2ae6d6d40f9d68', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8ff806e22922222b-ORD', 'content-encoding': 'gzip'})
2025-01-09 16:57:33.997 - RealTimeSTT: openai._base_client - DEBUG - request_id: None
2025-01-09 16:57:33.997 - RealTimeSTT: main - INFO - ⚡ Executing command: `python commands/template.py delete-user 12345 --confirm`
2025-01-09 16:57:34.122 - RealTimeSTT: main - INFO - ✅ Command execution completed successfully
2025-01-09 16:57:34.123 - RealTimeSTT: main - INFO - 📄 Output:

2025-01-09 16:57:34.128 - RealTimeSTT: root - DEBUG - Model tiny completed transcription in 0.41 seconds
2025-01-09 16:57:34.128 - RealTimeSTT: root - INFO - Setting listen time
2025-01-09 16:57:34.128 - RealTimeSTT: root - INFO - State changed from 'inactive' to 'listening'
2025-01-09 16:57:34.128 - RealTimeSTT: main - INFO - 📂 Loading typer file...
2025-01-09 16:57:34.129 - RealTimeSTT: root - DEBUG - Waiting for recording start
2025-01-09 16:57:34.129 - RealTimeSTT: main - INFO - 📝 Loading scratchpad files...
2025-01-09 16:57:34.129 - RealTimeSTT: main - INFO - 📝 Loading prompt template...
2025-01-09 16:57:34.129 - RealTimeSTT: main - INFO - 🤖 Processing text with DeepSeek...
2025-01-09 16:57:34.131 - RealTimeSTT: openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'user', 'content': '<purpose>\n    Given the available python typer-commands, the scratch-pad and the natural-language-request produce the correct typer CLI command.\n</purpose>\n\n<instructions>\n    <instruction>We only want the CLI command as output. No explanations or additional text. The command will be immediately executed.</instruction>\n    <instruction>Focus on generating a python typer-based command that can be used with a Python script called main.py.</instruction>\n    <instruction>All commands must be fully valid typer commands from the typer-commands file with arguments and flags infered based on the natural-language-request.</instruction>\n    <instruction>Be sure to use - for the function names instead of _ (example: \'hello-world\' instead of \'hello_world\')</instruction>\n    <instruction>Don\'t use = for arguments, use spaces instead (example: \'hello-world --name John\' instead of \'hello-world --name=John\')</instruction>\n    <instruction>If multiple commands are requested chain them together with \'&&\' so they run back to back in the terminal only if the previous command succeeds.</instruction>\n    <instruction>Respond with the command only, we will prefix the correct python and file to it.</instruction>\n    <instruction>If the user asks for a command (or something nonsense) that is not in the typer-commands file, respond with an empty string.</instruction>\n</instructions>\n\n<typer-commands>\nimport typer\nfrom typing import Optional\n\napp = typer.Typer()\n\n\n@app.command()\ndef ping_server(\n    wait: bool = typer.Option(False, "--wait", help="Wait for server response?")\n):\n    """\n    Pings the server, optionally waiting for a response.\n    """\n    pass\n\n\n@app.command()\ndef show_config(\n    verbose: bool = typer.Option(False, "--verbose", help="Show config in detail?")\n):\n    """\n    Shows the current configuration.\n    """\n    pass\n\n\n@app.command()\ndef list_files(\n    path: str = typer.Argument(..., help="Path to list files from"),\n    all_files: bool = typer.Option(False, "--all", help="Include hidden files"),\n):\n    """\n    Lists files in a directory. Optionally show hidden files.\n    """\n    pass\n\n\n@app.command()\ndef create_user(\n    username: str = typer.Argument(..., help="Name of the new user"),\n    role: str = typer.Option("guest", "--role", help="Role for the new user"),\n):\n    """\n    Creates a new user with an optional role.\n    """\n    pass\n\n\n@app.command()\ndef delete_user(\n    user_id: str = typer.Argument(..., help="ID of user to delete"),\n    confirm: bool = typer.Option(False, "--confirm", help="Skip confirmation prompt"),\n):\n    """\n    Deletes a user by ID.\n    """\n    pass\n\n\n@app.command()\ndef generate_report(\n    report_type: str = typer.Argument(..., help="Type of report to generate"),\n    output_file: str = typer.Option("report.json", "--output", help="Output file name"),\n):\n    """\n    Generates a report of a specified type to a given file.\n    """\n    pass\n\n\n@app.command()\ndef backup_data(\n    directory: str = typer.Argument(..., help="Directory to store backups"),\n    full: bool = typer.Option(False, "--full", help="Perform a full backup"),\n):\n    """\n    Back up data to a specified directory, optionally performing a full backup.\n    """\n    pass\n\n\n@app.command()\ndef restore_data(\n    file_path: str = typer.Argument(..., help="File path of backup to restore"),\n    overwrite: bool = typer.Option(\n        False, "--overwrite", help="Overwrite existing data"\n    ),\n):\n    """\n    Restores data from a backup file.\n    """\n    pass\n\n\n@app.command()\ndef summarize_logs(\n    logs_path: str = typer.Argument(..., help="Path to log files"),\n    lines: int = typer.Option(100, "--lines", help="Number of lines to summarize"),\n):\n    """\n    Summarizes log data from a specified path, limiting lines.\n    """\n    pass\n\n\n@app.command()\ndef upload_file(\n    file_path: str = typer.Argument(..., help="Path of file to upload"),\n    destination: str = typer.Option(\n        "remote", "--destination", help="Destination label"\n    ),\n    secure: bool = typer.Option(True, "--secure", help="Use secure upload"),\n):\n    """\n    Uploads a file to a destination, optionally enforcing secure upload.\n    """\n    pass\n\n\n@app.command()\ndef download_file(\n    url: str = typer.Argument(..., help="URL of file to download"),\n    output_path: str = typer.Option(".", "--output", help="Local output path"),\n    retry: int = typer.Option(3, "--retry", help="Number of times to retry"),\n):\n    """\n    Downloads a file from a URL with a specified number of retries.\n    """\n    pass\n\n\n@app.command()\ndef filter_records(\n    source: str = typer.Argument(..., help="Data source to filter"),\n    query: str = typer.Option("", "--query", help="Filtering query string"),\n    limit: int = typer.Option(10, "--limit", help="Limit the number of results"),\n):\n    """\n    Filters records from a data source using a query, limiting the number of results.\n    """\n    pass\n\n\n@app.command()\ndef validate_schema(\n    schema_file: str = typer.Argument(..., help="Path to schema file"),\n    data_file: str = typer.Option("", "--data", help="Path to data file to check"),\n    strict: bool = typer.Option(True, "--strict", help="Enforce strict validation"),\n):\n    """\n    Validates a schema, optionally checking a data file with strict mode.\n    """\n    pass\n\n\n@app.command()\ndef sync_remotes(\n    remote_name: str = typer.Argument(..., help="Name of remote to sync"),\n    force: bool = typer.Option(\n        False, "--force", help="Force syncing without prompting"\n    ),\n):\n    """\n    Syncs with a remote repository, optionally forcing the operation.\n    """\n    pass\n\n\n@app.command()\ndef simulate_run(\n    scenario: str = typer.Argument(..., help="Simulation scenario"),\n    cycles: int = typer.Option(5, "--cycles", help="Number of cycles to simulate"),\n    debug: bool = typer.Option(False, "--debug", help="Show debug output"),\n):\n    """\n    Simulates a scenario for a given number of cycles, optionally showing debug output.\n    """\n    pass\n\n\n@app.command()\ndef compare_files(\n    file_a: str = typer.Argument(..., help="First file to compare"),\n    file_b: str = typer.Argument(..., help="Second file to compare"),\n    diff_only: bool = typer.Option(\n        False, "--diff-only", help="Show only the differences"\n    ),\n):\n    """\n    Compares two files, optionally showing only differences.\n    """\n    pass\n\n\n@app.command()\ndef encrypt_data(\n    input_path: str = typer.Argument(..., help="Path of the file to encrypt"),\n    output_path: str = typer.Option("encrypted.bin", "--output", help="Output file"),\n    algorithm: str = typer.Option("AES", "--algorithm", help="Encryption algorithm"),\n):\n    """\n    Encrypts data using a specified algorithm and writes to an output file.\n    """\n    pass\n\n\n@app.command()\ndef decrypt_data(\n    encrypted_file: str = typer.Argument(..., help="Path to encrypted file"),\n    key: str = typer.Option(..., "--key", help="Decryption key"),\n    output_path: str = typer.Option("decrypted.txt", "--output", help="Output file"),\n):\n    """\n    Decrypts an encrypted file using a key.\n    """\n    pass\n\n\n@app.command()\ndef transform_data(\n    input_file: str = typer.Argument(..., help="File to transform"),\n    output_format: str = typer.Option("json", "--format", help="Output format"),\n    columns: str = typer.Option(\n        None, "--columns", help="Comma-separated columns to extract"\n    ),\n):\n    """\n    Transforms data from a file into a specified format, optionally extracting columns.\n    """\n    pass\n\n\n@app.command()\ndef upload_changes(\n    source_dir: str = typer.Argument(..., help="Directory of changes to upload"),\n    incremental: bool = typer.Option(False, "--incremental", help="Incremental upload"),\n    confirm: bool = typer.Option(False, "--confirm", help="Skip confirmation prompt"),\n):\n    """\n    Uploads changes from a directory, optionally in incremental mode.\n    """\n    pass\n\n\n@app.command()\ndef migrate_database(\n    old_db: str = typer.Argument(..., help="Path to old database"),\n    new_db: str = typer.Option(..., "--new-db", help="Path to new database"),\n    dry_run: bool = typer.Option(\n        False, "--dry-run", help="Perform a trial run without changing data"\n    ),\n):\n    """\n    Migrates data from an old database to a new one, optionally doing a dry run.\n    """\n    pass\n\n\n@app.command()\ndef health_check(\n    service_name: str = typer.Argument(..., help="Service to check"),\n    timeout: int = typer.Option(30, "--timeout", help="Timeout in seconds"),\n    alert: bool = typer.Option(False, "--alert", help="Send alert if check fails"),\n):\n    """\n    Checks the health of a service within a specified timeout, optionally sending alerts.\n    """\n    pass\n\n\n@app.command()\ndef search_logs(\n    keyword: str = typer.Argument(..., help="Keyword to search"),\n    log_file: str = typer.Option("system.log", "--log", help="Log file to search in"),\n    case_sensitive: bool = typer.Option(\n        False, "--case-sensitive", help="Enable case-sensitive search"\n    ),\n):\n    """\n    Searches for a keyword in a log file, optionally using case-sensitive mode.\n    """\n    pass\n\n\n@app.command()\ndef stats_by_date(\n    date: str = typer.Argument(..., help="Date in YYYY-MM-DD to query stats"),\n    show_raw: bool = typer.Option(False, "--show-raw", help="Display raw data"),\n):\n    """\n    Shows statistics for a specific date, optionally displaying raw data.\n    """\n    pass\n\n\n@app.command()\ndef publish_update(\n    version: str = typer.Argument(..., help="Version tag to publish"),\n    channel: str = typer.Option("stable", "--channel", help="Release channel"),\n    note: str = typer.Option("", "--note", help="Release note or description"),\n):\n    """\n    Publishes an update to a specified release channel with optional notes.\n    """\n    pass\n\n\n@app.command()\ndef check_version(\n    local_path: str = typer.Argument(..., help="Local path to check"),\n    remote_url: str = typer.Option("", "--remote", help="Remote URL for comparison"),\n    detailed: bool = typer.Option(\n        False, "--detailed", help="Show detailed version info"\n    ),\n):\n    """\n    Checks the version of a local path against a remote source, optionally showing details.\n    """\n    pass\n\n\n@app.command()\ndef queue_task(\n    task_name: str = typer.Argument(..., help="Name of the task to queue"),\n    priority: int = typer.Option(1, "--priority", help="Priority of the task"),\n    delay: int = typer.Option(\n        0, "--delay", help="Delay in seconds before starting task"\n    ),\n):\n    """\n    Queues a task with a specified priority and optional delay.\n    """\n    pass\n\n\n@app.command()\ndef remove_task(\n    task_id: str = typer.Argument(..., help="ID of the task to remove"),\n    force: bool = typer.Option(False, "--force", help="Remove without confirmation"),\n):\n    """\n    Removes a queued task by ID, optionally forcing removal without confirmation.\n    """\n    pass\n\n\n@app.command()\ndef list_tasks(\n    show_all: bool = typer.Option(\n        False, "--all", help="Show all tasks, including completed"\n    ),\n    sort_by: str = typer.Option(\n        "priority", "--sort-by", help="Sort tasks by this field"\n    ),\n):\n    """\n    Lists tasks, optionally including completed tasks or sorting by a different field.\n    """\n    pass\n\n\n@app.command()\ndef inspect_task(\n    task_id: str = typer.Argument(..., help="ID of the task to inspect"),\n    json_output: bool = typer.Option(\n        False, "--json", help="Show output in JSON format"\n    ),\n):\n    """\n    Inspects a specific task by ID, optionally in JSON format.\n    """\n    pass\n\n</typer-commands>\n\n<scratch-pad>\n\t<scratchpad name="scratchpad.txt">\nsource_dir: /Users/idd/code/src/, incremental: true, confirm: true\n\nold_db: /Users/idd/code/src/db/old.db\n</scratchpad>\n\n\n</scratch-pad>\n\n<natural-language-request>\nThat\'s a single.\n</natural-language-request>'}, {'role': 'assistant', 'content': 'python commands/template.py', 'prefix': True}], 'model': 'deepseek-chat'}}
2025-01-09 16:57:34.131 - RealTimeSTT: openai._base_client - DEBUG - Sending HTTP Request: POST https://api.deepseek.com/beta/chat/completions
2025-01-09 16:57:34.131 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-01-09 16:57:34.131 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_headers.complete
2025-01-09 16:57:34.131 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-01-09 16:57:34.132 - RealTimeSTT: httpcore.http11 - DEBUG - send_request_body.complete
2025-01-09 16:57:34.132 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-01-09 16:57:36.968 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 09 Jan 2025 22:57:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'vary', b'origin, access-control-request-method, access-control-request-headers'), (b'access-control-allow-credentials', b'true'), (b'x-ds-trace-id', b'62757299306e640362397081a8114e0f'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'x-content-type-options', b'nosniff'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'8ff806ec6f1a222b-ORD'), (b'Content-Encoding', b'gzip')])
2025-01-09 16:57:36.969 - RealTimeSTT: httpx - INFO - HTTP Request: POST https://api.deepseek.com/beta/chat/completions "HTTP/1.1 200 OK"
2025-01-09 16:57:36.969 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-01-09 16:57:36.970 - RealTimeSTT: httpcore.http11 - DEBUG - receive_response_body.complete
2025-01-09 16:57:36.970 - RealTimeSTT: httpcore.http11 - DEBUG - response_closed.started
2025-01-09 16:57:36.970 - RealTimeSTT: httpcore.http11 - DEBUG - response_closed.complete
2025-01-09 16:57:36.970 - RealTimeSTT: openai._base_client - DEBUG - HTTP Response: POST https://api.deepseek.com/beta/chat/completions "200 OK" Headers({'date': 'Thu, 09 Jan 2025 22:57:36 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'vary': 'origin, access-control-request-method, access-control-request-headers', 'access-control-allow-credentials': 'true', 'x-ds-trace-id': '62757299306e640362397081a8114e0f', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '8ff806ec6f1a222b-ORD', 'content-encoding': 'gzip'})
2025-01-09 16:57:36.970 - RealTimeSTT: openai._base_client - DEBUG - request_id: None
2025-01-09 16:57:36.972 - RealTimeSTT: main - INFO - ⚡ Executing command: `python commands/template.py upload-changes /Users/idd/code/src/ --incremental --confirm && python commands/template.py migrate-database /Users/idd/code/src/db/old.db --new-db /Users/idd/code/src/db/new.db`
2025-01-09 16:57:37.100 - RealTimeSTT: main - INFO - ✅ Command execution completed successfully
2025-01-09 16:57:37.100 - RealTimeSTT: main - INFO - 📄 Output:

2025-01-09 16:58:04.012 - RealTimeSTT: root - INFO - KeyboardInterrupt in wait_audio, shutting down
2025-01-09 16:58:04.012 - RealTimeSTT: root - DEBUG - Receive from stdout pipe
2025-01-09 16:58:04.013 - RealTimeSTT: root - DEBUG - Finishing recording thread
2025-01-09 16:58:04.023 - RealTimeSTT: root - DEBUG - Terminating reader process
2025-01-09 16:58:04.360 - RealTimeSTT: root - DEBUG - Terminating transcription process
2025-01-09 16:58:04.360 - RealTimeSTT: root - DEBUG - Finishing realtime thread
2025-01-09 16:58:04.397 - RealTimeSTT: root - INFO - KeyboardInterrupt in text() method
2025-01-09 16:58:04.485 - RealTimeSTT: httpcore.connection - DEBUG - close.started
2025-01-09 16:58:04.486 - RealTimeSTT: httpcore.connection - DEBUG - close.complete
